{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/login/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/login/Login.vue","mtime":1611035989045},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container\n    id=\"user-login\"\n    fluid\n    tag=\"section\"\n  >\n    <v-card style=\"width: 50%;\">\n\n    <v-row style=\"padding-left: 1%; padding-right: 1%;\" justify=\"center\">\n      <v-col\n          cols=\"12\"\n          md=\"12\"\n      >\n\n        <validation-observer\n        ref=\"observer\"\n        v-slot=\"{ invalid }\"\n        >\n        <form @submit.prevent=\"submit\">\n          <validation-provider\n              name=\"UserName\"\n              rules=\"required|max:10\"\n          >\n            <v-text-field\n                v-model=\"username\"\n                label=\"로그인 ID\"\n                required\n            ></v-text-field>\n          </validation-provider>\n          <validation-provider\n              name=\"Password\"\n          >\n            <v-text-field\n                v-model=\"password\"\n                type=\"password\"\n                label=\"비밀번호\"\n                required\n            ></v-text-field>\n          </validation-provider>\n\n          <v-btn\n              class=\"mr-4\"\n              type=\"submit\"\n              width=\"100%\"\n          >\n            로그인\n          </v-btn>\n        </form>\n        </validation-observer>\n      </v-col>\n    </v-row>\n<!--      <v-alert-->\n<!--          dense-->\n<!--          outlined-->\n<!--          v-if=\"errorCheck\"-->\n<!--          type=\"error\"-->\n<!--          style=\"padding-left: 10px;\"-->\n<!--      >-->\n<!--        ID 또는 비밀번호를 확인해 주세요.-->\n<!--      </v-alert>-->\n    </v-card>\n\n\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\n\nimport { required, digits, email, max, regex } from 'vee-validate/dist/rules'\nimport { extend, ValidationObserver, ValidationProvider, setInteractionMode } from 'vee-validate'\n\nsetInteractionMode('eager')\n\nextend('required', {\n  ...required,\n  message: '{_field_} can not be empty',\n})\n\nexport default {\n  components: {\n    ValidationProvider,\n    ValidationObserver,\n  },\n  data: () => ({\n    username: '',\n    password: '',\n    errorCheck: false,\n\n  }),\n  created() {\n    this.$store.commit('SET_LOADING', false)\n  },\n  methods: {\n\n\n    setUserTokenAndId(){\n      let userData = {\n        bearerToken: this.$store.state.bearerToken,\n        userId: this.$store.state.userId,\n        name: this.$store.state.name,\n      }\n      axios.post('/api/users/setTokenAndId/',userData\n      ).then(function (response){\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    setClusterTokenAndId(){\n      let userData = {\n        bearerToken: this.$store.state.bearerToken,\n        userId: this.$store.state.userId,\n        name: this.$store.state.name,\n      }\n      axios.post('/api/clusters/setTokenAndId/',userData\n      ).then(function (response){\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    setCatalogTokenAndId(){\n      let userData = {\n        bearerToken: this.$store.state.bearerToken,\n        userId: this.$store.state.userId,\n        name: this.$store.state.name,\n      }\n      axios.post('/api/catalog/setTokenAndId/',userData\n      ).then(function (response){\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    setLoginTokenAndId(){\n      let userData = {\n        bearerToken: this.$store.state.bearerToken,\n        userId: this.$store.state.userId,\n        name: this.$store.state.name,\n      }\n      axios.post('/api/login/setTokenAndId/',userData\n      ).then(function (response){\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    setProjectTokenAndId(){\n      let userData = {\n        bearerToken: this.$store.state.bearerToken,\n        userId: this.$store.state.userId,\n        name: this.$store.state.name,\n      }\n      axios.post('/api/projects/setTokenAndId/',userData\n      ).then(function (response){\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    setNodeTokenAndId(){\n      let userData = {\n        bearerToken: this.$store.state.bearerToken,\n        userId: this.$store.state.userId,\n        name: this.$store.state.name,\n      }\n      axios.post('/api/nodes/setTokenAndId/',userData\n      ).then(function (response){\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    setTokenAndId(){\n      this.setUserTokenAndId()\n      this.setClusterTokenAndId()\n      this.setLoginTokenAndId()\n      this.setCatalogTokenAndId()\n      this.setProjectTokenAndId()\n      this.setNodeTokenAndId()\n    },\n\n    submit (res) {\n      let _self = this\n      _self.$store.commit('SET_LOADING', true)\n      // this.$refs.observer.validate()\n      console.log(res);\n      console.log(res.target[0].value);\n      console.log(res.target[1].value);\n      let data = {\n        username: res.target[0].value,\n        password: res.target[1].value,\n      }\n      axios.post('/api/users/loginUser',data\n      ).then(function (response){\n        console.log(response);\n        console.log(response.data.token);\n        console.log(response.data.userId);\n        console.log(response.data.name);\n\n        if(response.data == '' || response.data == undefined){\n          _self.$store.commit('SET_LOADING', false)\n          // _self.errorCheck = true\n\n          _self.$store.commit('SET_ALERT_TYPE', 'error')\n          _self.$store.commit('SET_ERROR_CHECK', true)\n          _self.$store.commit('SET_ALERT_TEXT', 'ID 또는 비밀번호가 틀렸습니다.')\n\n          setTimeout(function (){\n            _self.$store.commit('SET_ERROR_CHECK', false)\n          },3000)\n          return\n        }\n\n        _self.$store.commit('SET_TOKEN', response.data.token)\n        _self.$store.commit('SET_USERID', response.data.userId)\n        _self.$store.commit('SET_NAME', response.data.name)\n\n\n        let today = new Date()\n        let loginTime = today.getTime()\n        console.log('time: ' + today.getTime())\n\n        _self.$store.commit('SET_TIME', loginTime)\n\n        console.log(_self.$store.state.bearerToken)\n        console.log(_self.$store.state.userId)\n        console.log(_self.$store.state.name)\n\n        _self.setTokenAndId()\n\n        if(_self.$store.state.bearerToken != null && _self.$store.state.bearerToken != ''){\n          _self.$store.commit('SET_LOADING', false)\n          _self.$router.push('/')\n        }\n\n      }).catch(function (error){\n        _self.$store.commit('SET_LOADING', false)\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '네트워크를 확인해주세요.')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n        // _self.errorCheck = true\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    clear () {\n      this.username = ''\n      this.password = ''\n      this.$refs.observer.reset()\n    },\n  },\n}\n\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"],"sourceRoot":"src/views/dashboard/login"}]}