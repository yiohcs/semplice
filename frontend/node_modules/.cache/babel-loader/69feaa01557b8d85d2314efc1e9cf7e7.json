{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Node.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Node.vue","mtime":1611037129329},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Node.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container\n    id=\"node\"\n    fluid\n    tag=\"section\"\n  >\n    <div style=\"position: relative; width: 100%; height: 60px;\">\n      <v-btn\n          color=\"primary\"\n          dark\n          class=\"mb-2\"\n          @click=\"createNodeShow\"\n          style=\"position: absolute; right: 4.5%;\">\n\n        노드 추가\n      </v-btn>\n    </div>\n\n    <v-data-table\n        :headers=\"headers\"\n        :items=\"information\"\n        :items-per-page=\"10\"\n        class=\"elevation-1\"\n    >\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon\n            small\n            class=\"mr-2\"\n            @click=\"nodeModifyShow(item)\"\n        >\n          mdi-pencil\n        </v-icon>\n        <v-icon\n            small\n            @click=\"nodeDeleteShow\"\n        >\n          mdi-delete\n        </v-icon>\n\n        <v-dialog v-model=\"createNodeDialog\" @close=\"createNodeDialogClose\" max-width=\"700px\">\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\">노드 추가</span>\n            </v-card-title>\n\n            <div style=\"margin-left:5%; margin-right:5%; \">\n              <div style=\"text-align: center;\">\n                <v-checkbox v-model=\"etcd\" @change=\"checkRole\" label=\"etcd\" style=\"display: inline-block;\"></v-checkbox>\n                <v-checkbox v-model=\"controlPlane\" @change=\"checkRole\" label=\"controlPlane\" style=\"display: inline-block; margin-left: 10%;\"></v-checkbox>\n                <v-checkbox v-model=\"worker\" @change=\"checkRole\" label=\"worker\" style=\"display: inline-block; margin-left: 10%;\"></v-checkbox>\n              </div>\n              <span>이미 실행중인 하나 이상의 기존 머신에서 이 Docker 명령을 실행하세요.<br><br></span>\n              <span>{{ nodeCommand+nodeCommandRole }}</span>\n            </div>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"createNodeDialogClose\"\n              >\n                취소\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n\n        </v-dialog>\n\n\n        <v-dialog\n            v-model=\"modifyDialog\"\n            max-width=\"600px\"\n        >\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\"> 노드 수정 </span>\n            </v-card-title>\n\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-col\n                      cols=\"12\"\n                      sm=\"6\"\n                      md=\"4\"\n                  >\n                    <v-text-field\n                        v-model=\"editTable.name\"\n                        label=\"노드 이름\"\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-card-text>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"modifyNodeName\"\n              >\n                저장\n              </v-btn>\n              <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"closeModify\"\n              >\n                취소\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n        <v-dialog v-model=\"deleteDialog\" max-width=\"500px\">\n          <v-card>\n            <v-card-title class=\"headline\">노드를 삭제하시겠습니까?</v-card-title>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" text @click=\"deleteNode(item)\">삭제</v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">취소</v-btn>\n              <v-spacer></v-spacer>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </template>\n    </v-data-table>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\nconst Vue = require('vue');\nvar json_list;\n\nexport default {\n  name: \"Projects\",\n  // data: function (){\n  //   return{\n  //     list:['a','b'],\n  //   };\n  // }\n  data () {\n    return {\n      modifyDialog: false,\n      deleteDialog: false,\n      createNodeDialog: false,\n      createNode: true,\n      etcd: false,\n      controlPlane: false,\n      worker: false,\n      resData: '',\n      nodeCommand: '',\n      nodeCommandRole: '',\n      headers: [\n        { text: '상태', value: 'state'},\n        { text: '노드 이름', value: 'newNodeName' },\n        { text: '역할', value: 'role' },\n        { text: '버전', value: 'info.kubernetes.kubeletVersion' },\n        { text: 'CPU', value: 'cpu'},\n        { text: '메모리', value: 'memory'},\n        { text: '파드', value: 'pods' },\n        { text: '수정/삭제', value: 'actions', sortable: false}\n      ],\n      information: [\n      ],\n      editTable:{\n        name: '',\n        id: '',\n      },\n    }\n  },\n  methods:{\n    createNodeDialogClose(){\n      this.createNodeDialog = false\n      this.etcd = false\n      this.controlPlane = false\n      this.worker = false\n    },\n    checkRole(){\n      this.nodeCommandRole = ''\n\n      if(this.etcd){\n        this.nodeCommandRole += ' --etcd'\n      }\n      if(this.controlPlane){\n        this.nodeCommandRole += ' --controlplane'\n      }\n      if(this.worker){\n        this.nodeCommandRole += ' --worker'\n      }\n    },\n    createNodeShow(){\n      this.checkRole()\n      console.log(this.createNodeDialog)\n      this.getClusterToken()\n      this.createNodeDialog = true\n      console.log(this.createNodeDialog)\n    },\n    getClusterToken(){\n      let _self = this\n\n      let nodeData = {\n        id: _self.$store.state.clusterDetailInfo.id,\n      }\n      console.log(nodeData)\n\n      axios.post('/api/nodes/getClusterToken',nodeData\n      ).then(function (response){\n        console.log(response.data)\n        _self.resData = response.data[0]\n\n        _self.nodeCommand = _self.resData.nodeCommand\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    nodeModifyShow(item){\n      this.modifyDialog = true\n      this.editTable.name = item.newNodeName\n      this.editTable.id = item.id\n    },\n    nodeDeleteShow(){\n      this.deleteDialog = true\n    },\n    deleteNode(item){\n      console.log(item)\n      let _self = this;\n      _self.deleteDialog = false\n      _self.$store.commit('SET_LOADING', true)\n\n      let nodeData = {\n        id: item.id,\n      }\n\n      axios.post('/api/nodes/delete',nodeData\n      ).then(function (response){\n        _self.$store.commit('SET_LOADING', false)\n        _self.$store.commit('SET_ALERT_TYPE', 'success')\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '노드 삭제 완료')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    closeDelete(){\n      this.deleteDialog = false\n    },\n    closeModify(){\n      this.modifyDialog = false\n    },\n\n    modifyNodeName(){\n      let _self = this\n      _self.modifyDialog = false\n      _self.$store.commit('SET_LOADING', true)\n\n      let nodeData = {\n        id: _self.editTable.id,\n        name: _self.editTable.name,\n      }\n      console.log(nodeData)\n\n      axios.post('/api/nodes/modifyNodeName',nodeData\n      ).then(function (response){\n\n        _self.node_Get()\n        _self.$store.commit('SET_LOADING', false)\n        _self.$store.commit('SET_ALERT_TYPE', 'success')\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '노드 이름 수정 완료')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    node_Get(){\n      let _self = this\n\n      axios.get('/api/nodes/'+_self.$store.state.clusterDetailInfo.id,{\n      }).then(function (response){\n\n        let jsonStr = JSON.stringify(response.data);\n        let json = JSON.parse(jsonStr);\n\n        _self.information = json;\n\n        for(let i=0;i<_self.information.length;i++){\n          if(_self.information[i].name=='' || _self.information[i].name==undefined){\n            console.log(_self.information)\n            console.log(_self.information.nodeName)\n            _self.information[i].newNodeName = _self.information[i].nodeName\n          }else{\n            _self.information[i].newNodeName = _self.information[i].name\n          }\n        }\n\n        console.log(_self.information)\n\n        for(let i=0;i<json.length;i++){\n          let role = ''\n          if(json[i].etcd || json[i].controlPlane || json[i].worker)\n          {\n            if(json[i].etcd){role += ',etcd'}\n            if(json[i].controlPlane){role += ',controlPlane'}\n            if(json[i].worker){role += ',worker'}\n            role = role.substring(1,role.length)\n            console.log(role)\n          }\n          _self.information[i].role = role\n\n          let cpu = json[i].requested.cpu + '/' + json[i].capacity.cpu\n          let memory = json[i].requested.memory + '/' + json[i].capacity.memory\n          let pods = json[i].requested.pods + '/' + json[i].capacity.pods\n          console.log('cpu >>>>> '+cpu)\n          if(cpu == undefined || cpu == '' || cpu == '0'){\n            return\n          }\n\n          _self.information[i].cpu = cpu\n          _self.information[i].memory = memory\n          _self.information[i].pods = pods\n\n        }\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n  },\n  created(){\n    let _self = this\n\n    if(_self.$store.state.nodeTimer == '') {\n      _self.$store.commit('SET_NODE_TIMER', setInterval(function () {\n        _self.node_Get()\n      }, 5000))\n    }\n\n    _self.$store.commit('SET_LOADING', true)\n    axios.get('/api/nodes/'+_self.$store.state.clusterDetailInfo.id,{\n    }).then(function (response){\n\n      let jsonStr = JSON.stringify(response.data);\n      let json = JSON.parse(jsonStr);\n\n      _self.information = json;\n      for(let i=0;i<_self.information.length;i++){\n        if(_self.information[i].name=='' || _self.information[i].name==undefined){\n          _self.information[i].newNodeName = _self.information[i].nodeName\n        }else{\n          _self.information[i].newNodeName = _self.information[i].name\n        }\n      }\n      console.log(_self.information)\n\n      for(let i=0;i<json.length;i++){\n        let role = ''\n        if(json[i].etcd || json[i].controlPlane || json[i].worker)\n        {\n          if(json[i].etcd){role += ',etcd'}\n          if(json[i].controlPlane){role += ',controlPlane'}\n          if(json[i].worker){role += ',worker'}\n          role = role.substring(1,role.length)\n          console.log(role)\n        }\n        _self.information[i].role = role\n\n        let cpu = json[i].requested.cpu + '/' + json[i].capacity.cpu\n        let memory = json[i].requested.memory + '/' + json[i].capacity.memory\n        let pods = json[i].requested.pods + '/' + json[i].capacity.pods\n\n        _self.information[i].cpu = cpu\n        _self.information[i].memory = memory\n        _self.information[i].pods = pods\n\n      }\n\n\n\n      _self.$store.commit('SET_LOADING', false)\n\n    }).catch(function (error){\n      console.log(error);\n    }).finally(function (){\n\n    });\n\n    // this.clusterDetailInfo = this.$store.state.clusterDetailInfo\n    // if(this.clusterDetailInfo.appliedSpec.rancherKubernetesEngineConfig != null){\n    //   this.clusterDetailInfo.hostnameOverride = this.clusterDetailInfo.appliedSpec.rancherKubernetesEngineConfig.nodes[0].hostnameOverride\n    //   this.clusterDetailInfo.role = this.clusterDetailInfo.appliedSpec.rancherKubernetesEngineConfig.nodes[0].role\n    // }else{\n    //   this.clusterDetailInfo.hostname = this.clusterDetailInfo.id\n    //   this.clusterDetailInfo.role = 'controlplane'\n    // }\n    // this.information.push(this.clusterDetailInfo)\n  },\n}\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"],"sourceRoot":"src/views/dashboard/pages"}]}