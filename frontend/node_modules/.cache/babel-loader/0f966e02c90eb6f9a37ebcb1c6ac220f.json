{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue","mtime":1611123066862},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cluster.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container\n    id=\"user-profile\"\n    fluid\n    tag=\"section\"\n  >\n    <v-row justify=\"center\">\n      <v-col\n        cols=\"12\"\n        md=\"10\"\n      >\n<!--          <v-data-table-->\n<!--              :headers=\"headers\"-->\n<!--              :items=\"information\"-->\n<!--              :items-per-page=\"10\"-->\n<!--              class=\"elevation-1\"-->\n<!--              @click:row=\"dataClick\"-->\n<!--          >-->\n          <v-data-table\n              :headers=\"headers\"\n              :items=\"information\"\n              :items-per-page=\"10\"\n              class=\"elevation-1\"\n          >\n            <template v-slot:top>\n                <v-divider\n                    class=\"mx-4\"\n                    inset\n                    vertical\n                ></v-divider>\n                <v-spacer></v-spacer>\n              <div style=\"position: relative; width: 100%; height: 50px;\">\n                <div style=\"position: absolute; right: 7%; white-space: nowrap;\">\n                  <v-btn\n                      color=\"primary\"\n                      dark\n                      class=\"mb-2\"\n                      @click=\"createCluster\"\n                      style=\"display: inline-block;\"\n                  >\n                    새 클러스터 생성\n                  </v-btn>\n                  <v-btn\n                      color=\"primary\"\n                      dark\n                      class=\"mb-2\"\n                      @click=\"importCluster\"\n                      style=\"margin-left: 10%; display: inline-block;\"\n                  >\n                    기존 클러스터 추가\n                  </v-btn>\n                </div>\n              </div>\n\n                <v-dialog v-model=\"dialogCreate\" @close=\"cluster_Get\" max-width=\"700px\">\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ clusterFormTitle }}</span>\n                    </v-card-title>\n\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col\n                              cols=\"12\"\n                              sm=\"6\"\n                              md=\"4\"\n                          >\n                            <div style=\"height: 90px;\">\n                              <v-text-field\n                                  v-model=\"editedItem.name\"\n                                  label=\"클러스터 이름\"\n                              ></v-text-field>\n                              <div>{{editSpaceClusterName}}</div>\n                            </div>\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n\n                    <div v-show=\"showTokenCommand\" style=\"margin-left:5%; margin-right:5%; \">\n                      <div v-if=\"newCluster == -1\" style=\"text-align: center;\">\n                        <v-checkbox v-model=\"etcd\" @change=\"checkRole\" label=\"etcd\" style=\"display: inline-block;\"></v-checkbox>\n                        <v-checkbox v-model=\"controlPlane\" @change=\"checkRole\" label=\"controlPlane\" style=\"display: inline-block; margin-left: 10%;\"></v-checkbox>\n                        <v-checkbox v-model=\"worker\" @change=\"checkRole\" label=\"worker\" style=\"display: inline-block; margin-left: 10%;\"></v-checkbox>\n                      </div>\n                      <span>{{newCluster == -1 ? '이미 실행중인 하나 이상의 기존 머신에서 이 Docker 명령을 실행하세요.' : '지원되는 Kubernetes 버전을 실행하는 기존 Kubernetes 클러스터에서 아래 kubectl 명령을 실행하여 Rancher로 가져옵니다.'}}<br><br></span>\n                      <span>{{newCluster == -1 ? nodeCommand+nodeCommandRole : command }}</span>\n                      <span><br><br>{{newCluster == -1 ? '' : '\\'알 수없는 기관에서 서명 한 인증서\\'에 대한 오류가 발생하는 경우 대신 아래 명령을 실행하여 인증서 검사를 우회하세요.'}}<br></span>\n                      <span>{{newCluster == -1 ? '' : insecureCommand}}</span>\n                    </div>\n\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                          v-show=\"createBtnShow\"\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"clusterCreateImport\"\n                      >\n                        생성\n                      </v-btn>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"dialogCreateClose\"\n                      >\n                        취소\n                      </v-btn>\n                    </v-card-actions>\n                  </v-card>\n\n                </v-dialog>\n\n                <v-dialog\n                    v-model=\"dialog\"\n                    max-width=\"600px\"\n                >\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ formTitle }}</span>\n                    </v-card-title>\n\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col\n                              cols=\"12\"\n                              sm=\"6\"\n                              md=\"4\"\n                          >\n                            <div style=\"height: 90px;\">\n                              <v-text-field\n                                  v-model=\"editedItem.name\"\n                                  label=\"클러스터 이름\"\n                              ></v-text-field>\n                              <div>{{editSpaceClusterName}}</div>\n                            </div>\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"modifyClusterName\"\n                      >\n                        저장\n                      </v-btn>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"close\"\n                      >\n                        취소\n                      </v-btn>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n                <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n                  <v-card>\n                    <v-card-title class=\"headline\">클러스터를 삭제하시겠습니까?</v-card-title>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\">삭제</v-btn>\n                      <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">취소</v-btn>\n                      <v-spacer></v-spacer>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n            </template>\n\n            <template v-slot:item.name=\"{ item }\">\n              <a @click=\"dataClick(item)\">{{ item.name }}</a>\n            </template>\n\n            <template v-slot:item.actions=\"{ item }\">\n              <v-icon\n                  small\n                  class=\"mr-2\"\n                  @click=\"editItem(item)\"\n              >\n                mdi-pencil\n              </v-icon>\n              <v-icon\n                  small\n                  @click=\"deleteItem(item)\"\n              >\n                mdi-delete\n              </v-icon>\n            </template>\n<!--            <template v-slot:no-data>-->\n<!--              <v-btn-->\n<!--                  color=\"primary\"-->\n<!--                  @click=\"initialize\"-->\n<!--              >-->\n<!--                Reset-->\n<!--              </v-btn>-->\n<!--            </template>-->\n          </v-data-table>\n<!--          <v-btn color=\"primary\" @click=\"cluster_Delete()\">Delete</v-btn>-->\n\n\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\nconst Vue = require('vue');\nimport drawer from \"../components/core/Drawer\";\n\n\n\n\nexport default {\n  name: \"Clusters\",\n  // data: function (){\n  //   return{\n  //     list:['a','b'],\n  //   };\n  // }\n  methods:{\n    modifyClusterName(){\n      let _self = this;\n\n      if(this.editedItem.name == '' || this.editedItem.name == undefined){\n        return\n      }\n      _self.dialog = false\n      _self.$store.commit('SET_LOADING', true)\n      console.log('modify');\n      let clusterData = {\n        name: _self.editedItem.name,\n        id: _self.editedItem.id\n      }\n      axios.post('/api/clusters/modifyClusterName',clusterData\n      ).then(function (response){\n        // console.log(response.data)\n\n        _self.cluster_Get()\n        _self.$store.commit('SET_LOADING', false)\n        _self.$store.commit('SET_ALERT_TYPE', 'success')\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '클러스터 이름 수정 완료')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    checkRole(){\n      this.nodeCommandRole = ''\n\n      if(this.etcd){\n        this.nodeCommandRole += ' --etcd'\n      }\n      if(this.controlPlane){\n        this.nodeCommandRole += ' --controlplane'\n      }\n      if(this.worker){\n        this.nodeCommandRole += ' --worker'\n      }\n\n    },\n    editItem (item) {\n      this.editedIndex = this.information.indexOf(item)\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n\n    createCluster (item) {\n      this.newCluster = -1\n      this.showTokenCommand = false\n      this.editedItem = Object.assign({}, item)\n      this.dialogCreate = true\n      this.createBtnShow = true\n    },\n\n    importCluster (item) {\n      this.newCluster = 1\n      this.showTokenCommand = false\n      this.editedItem = Object.assign({}, item)\n      this.dialogCreate = true\n      this.createBtnShow = true\n    },\n\n    clusterCreateImport (item) {\n      Object.assign({}, item)\n      console.log(this.editedItem.name)\n      // let showTokenCommand = document.getElementById('showTokenCommand')\n      // showTokenCommand.style.visibility = 'visible'\n\n      if(this.editedItem.name == '' || this.editedItem.name == undefined ){\n        return\n      }\n\n      this.cluster_Create(this.editedItem.name)\n\n\n      // await _sleep(1000);\n      // console.log('Second');\n\n      // this.close()\n    },\n\n    deleteItem (item) {\n      if(item.name != 'local') {\n        console.log(item.id)\n        this.item_id = item.id\n        this.editedIndex = this.information.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialogDelete = true\n      }\n    },\n\n    deleteItemConfirm () {\n      this.information.splice(this.editedIndex, 1)\n      this.closeDelete()\n      this.cluster_Delete(this.item_id);\n    },\n\n    dialogCreateClose(){\n      this.dialogCreate = false\n      this.cluster_Get()\n    },\n\n    close () {\n      this.dialog = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    closeDelete () {\n      this.dialogDelete = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    save () {\n      if(this.editedItem.name == ''){\n        return\n      }\n\n      if (this.editedIndex > -1) {\n        Object.assign(this.information[this.editedIndex], this.editedItem)\n      } else {\n        // this.information.push(this.editedItem)\n        this.cluster_Create(this.editedItem.name)\n      }\n      this.close()\n    },\n\n    cluster_Delete(id){\n      let _self = this;\n      console.log('delete');\n      axios.get('/api/clusters/delete/'+id,{\n      }).then(function (response){\n\n        _self.cluster_Get()\n        // await _sleep(1000);\n        // console.log('Second');\n        _self.$store.commit('SET_ALERT_TYPE', 'success')\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '클러스터 삭제 완료')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_Create(name){\n      let _self = this;\n      _self.$store.commit('SET_LOADING', true)\n      console.log('Create');\n      axios.get('/api/clusters/create/'+name,{\n      }).then(function (response){\n        // console.log(response.data)\n          _self.resData = response.data\n\n          console.log('tokenData >>>> ')\n          console.log(_self.resData)\n          if (_self.newCluster == -1) {\n            _self.nodeCommand = _self.resData.nodeCommand\n          } else {\n            _self.command = _self.resData.command\n            _self.insecureCommand = _self.resData.insecureCommand\n          }\n          _self.showTokenCommand = true\n          _self.createBtnShow = false\n          _self.$store.commit('SET_LOADING', false)\n        _self.$store.commit('SET_ALERT_TYPE', 'success')\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '클러스터 등록 완료')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    // cluster_Create(name){\n    //   let _self = this;\n    //   let returnToken\n    //   console.log('Create');\n    //   axios.get('/api/clusters/create/'+name,{\n    //   }).then(function (response){\n    //     // console.log(response.data)\n    //\n    //     const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n    //\n    //     const timer = async () => {\n    //\n    //       _self.cluster_generateToken(response.data.id)\n    //\n    //       await _sleep(1500);\n    //       console.log('First');\n    //       _self.cluster_Get()\n    //\n    //       // await _sleep(1000);\n    //       // console.log('Second');\n    //     };\n    //     timer();\n    //   }).catch(function (error){\n    //     console.log(error);\n    //   }).finally(function (){\n    //\n    //   });\n    // },\n    //\n    // cluster_generateToken(name){\n    //   let _self = this;\n    //   console.log('generateToken');\n    //   axios.get('/api/clusters/generateToken/'+name,{\n    //   }).then(function (response){\n    //     console.log(response.data)\n    //     console.log(response.data.nodeCommand)\n    //\n    //     _self.resData = response.data\n    //       // await _sleep(1000);\n    //       // console.log('Second');\n    //\n    //   }).catch(function (error){\n    //     console.log(error);\n    //   }).finally(function (){\n    //\n    //   });\n    // },\n\n    cluster_Get(){\n      let _self = this;\n\n      console.log('cluster_Get')\n\n      axios.get('/api/clusters',{\n      }).then(function (response){\n\n        if(response.data =='' || response.data == null){\n          _self.$store.commit('SET_TOKEN', response.data.token)\n          _self.$store.commit('SET_USERID', response.data.userId)\n          _self.$store.commit('SET_NAME', response.data.name)\n          return\n        }\n\n        let jsonStr = JSON.stringify(response.data);\n        let json = JSON.parse(jsonStr);\n\n        let cpuList = [];\n        let memoryList = [];\n\n        _self.information = json;\n\n        for(let i=0;i<json.length;i++){\n          cpuList[i] = json[i].requested.cpu + '/' + json[i].capacity.cpu + ' cores';\n          memoryList[i] = json[i].requested.memory + '/' + json[i].capacity.memory;\n          _self.information[i].cpuList = cpuList[i];\n          _self.information[i].memoryList = memoryList[i];\n        }\n\n        //drawer.items.childItem = titleList\n\n        // json_list = json;\n        // for(var i=0;i<json.length;i++){\n        //   console.log(json[i].memory);\n        // };\n\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    dataClick(row){\n      let _self = this\n      this.information.map((item, index) =>{\n        console.log(row)\n        item.selected = item === row\n\n        this.$store.commit('SET_CLUSTER_DETAIL_INFO', row)\n        this.$store.commit('SET_CPU', row.cpuList)\n        this.$store.commit('SET_MEMORY', row.memoryList)\n        this.$store.commit('SET_PODS', row.podsList)\n\n        this.$store.commit('SET_LOADING', true)\n        this.$router.push('/c/'+row.id)\n      });\n    },\n    // dataClick(row){\n    //   this.information.map((item, index) =>{\n    //     item.selected = item === row\n    //\n    //     let clusterDetailInfo = {}\n    //     clusterDetailInfo = row\n    //\n    //     this.$store.commit('SET_CLUSTER_DETAIL_INFO', clusterDetailInfo)\n    //     this.$store.commit('SET_CPU', row.cpuList)\n    //     this.$store.commit('SET_MEMORY', row.memoryList)\n    //     this.$store.commit('SET_PODS', row.podsList)\n    //     console.log(row)\n    //     if(row.appliedSpec.rancherKubernetesEngineConfig != null) {\n    //       this.$store.commit('SET_NODES', row.appliedSpec.rancherKubernetesEngineConfig.nodes)\n    //       this.$store.commit('SET_HOSTNAME_OVERRIDE', row.appliedSpec.rancherKubernetesEngineConfig.nodes[0].hostnameOverride)\n    //       this.$store.commit('SET_ROLE', row.appliedSpec.rancherKubernetesEngineConfig.nodes[0].role)\n    //     }else{\n    //       this.$store.commit('SET_HOSTNAME_OVERRIDE', row.id)\n    //     }\n    //     this.$store.commit('SET_GIT_VERSION', row.version.gitVersion)\n    //\n    //     this.$router.push('/c/'+row.id)\n    //   });\n    // },\n  }, // end of methods\n\n  data () {\n    return{\n      dialog: false,\n      dialogDelete: false,\n      dialogCreate: false,\n      showTokenCommand: false,\n      createBtnShow: true,\n      resData: '',\n      item_id: '',\n      etcd: false,\n      controlPlane: false,\n      worker: false,\n      headers: [\n        { text: '상태', value: 'state'},\n        { text: '클러스터 이름', value: 'name' },\n        { text: '제공자', value: 'provider' },\n        { text: '노드', value: 'nodeCount' },\n        { text: 'CPU', value: 'cpuList'},\n        { text: '메모리', value: 'memoryList'},\n        { text: '수정/삭제', value: 'actions', sortable: false },\n      ],\n      information: [\n      ],\n      editedIndex: -1,\n      newCluster: -1,\n      command: '',\n      insecureCommand: '',\n      nodeCommand: '',\n      nodeCommandRole: '',\n      editedItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        id: '',\n      },\n      defaultItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        version:{\n          gitVersion: '',\n        },\n        id: '',\n      },\n    }\n  }, // end of data\n  computed: {\n    formTitle () {\n      return this.editedIndex === -1 ? '클러스터 생성' : '클러스터 수정'\n    },\n\n    clusterFormTitle () {\n      return this.newCluster === -1 ? '클러스터 생성' : '기존 클러스터 추가'\n    },\n\n    editSpaceClusterName(){\n      return this.editedItem.name == '' || this.editedItem.name == undefined ? '빈 칸을 입력해 주세요' : ''\n    },\n  },\n  created(){\n    let _self = this;\n\n    if(_self.$store.state.clusterTimer == '') {\n      _self.$store.commit('SET_CLUSTER_TIMER', setInterval(function () {\n        _self.cluster_Get()\n      }, 5000))\n    }\n\n    _self.$store.commit('SET_LOADING', true)\n\n    console.log(this.$store.state.bearerToken)\n    console.log(this.$store.state.userId)\n\n    // if('' == this.$store.state.bearerToken || '' == this.$store.state.userId){\n    //   this.$router.push('/login')\n    //   return;\n    // }\n\n\n    axios.get('/api/clusters',{\n    }).then(function (response){\n\n      let jsonStr = JSON.stringify(response.data);\n      let json = JSON.parse(jsonStr);\n\n      let cpuList = [];\n      let memoryList = [];\n      let podsList = [];\n\n      _self.information = json;\n\n      for(let i=0;i<json.length;i++){\n        cpuList[i] = json[i].requested.cpu + '/' + json[i].capacity.cpu + ' cores';\n        memoryList[i] = json[i].requested.memory + '/' + json[i].capacity.memory;\n        podsList[i] = json[i].requested.pods + '/' + json[i].capacity.pods;\n        _self.information[i].cpuList = cpuList[i];\n        _self.information[i].memoryList = memoryList[i];\n        _self.information[i].podsList = podsList[i];\n      }\n      _self.$store.commit('SET_LOADING', false)\n\n      // console.log('cluseter : ' + _self.$store.state.bearerToken)\n      // console.log(_self.information);\n      // for (var obj of _self.information) {\n      //   console.log(obj);\n      // }\n      // json_list = json;\n      // for(var i=0;i<json.length;i++){\n      //   console.log(json[i].memory);\n      // };\n\n\n    }).catch(function (error){\n      console.log(error);\n    }).finally(function (){\n\n    });\n  }, // end of created\n}\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"],"sourceRoot":"src/views/dashboard/pages"}]}