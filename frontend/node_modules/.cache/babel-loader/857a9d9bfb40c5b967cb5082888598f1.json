{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Node.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Node.vue","mtime":1609830834232},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTsKCnZhciBWdWUgPSByZXF1aXJlKCd2dWUnKTsKCnZhciBqc29uX2xpc3Q7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUHJvamVjdHMiLAogIC8vIGRhdGE6IGZ1bmN0aW9uICgpewogIC8vICAgcmV0dXJuewogIC8vICAgICBsaXN0OlsnYScsJ2InXSwKICAvLyAgIH07CiAgLy8gfQogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBoZWFkZXJzOiBbewogICAgICAgIHRleHQ6ICfsg4Htg5wnLAogICAgICAgIHZhbHVlOiAnc3RhdGUnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAn64W465OcIOydtOumhCcsCiAgICAgICAgdmFsdWU6ICdob3N0bmFtZU92ZXJyaWRlJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ+yXre2VoCcsCiAgICAgICAgdmFsdWU6ICdyb2xlJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ+uyhOyghCcsCiAgICAgICAgdmFsdWU6ICd2ZXJzaW9uLmdpdFZlcnNpb24nCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnQ1BVJywKICAgICAgICB2YWx1ZTogJ2NwdScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICfrqZTrqqjrpqwnLAogICAgICAgIHZhbHVlOiAnbWVtb3J5JwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ+2MjOuTnCcsCiAgICAgICAgdmFsdWU6ICdwb2RzJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ+yImOyglS/sgq3soJwnLAogICAgICAgIHZhbHVlOiAnYWN0aW9ucycsCiAgICAgICAgc29ydGFibGU6IGZhbHNlCiAgICAgIH1dLAogICAgICBpbmZvcm1hdGlvbjogW10KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5jbHVzdGVyRGV0YWlsSW5mbyA9IHRoaXMuJHN0b3JlLnN0YXRlLmNsdXN0ZXJEZXRhaWxJbmZvOwoKICAgIGlmICh0aGlzLmNsdXN0ZXJEZXRhaWxJbmZvLmFwcGxpZWRTcGVjLnJhbmNoZXJLdWJlcm5ldGVzRW5naW5lQ29uZmlnICE9IG51bGwpIHsKICAgICAgdGhpcy5jbHVzdGVyRGV0YWlsSW5mby5ob3N0bmFtZU92ZXJyaWRlID0gdGhpcy5jbHVzdGVyRGV0YWlsSW5mby5hcHBsaWVkU3BlYy5yYW5jaGVyS3ViZXJuZXRlc0VuZ2luZUNvbmZpZy5ub2Rlc1swXS5ob3N0bmFtZU92ZXJyaWRlOwogICAgICB0aGlzLmNsdXN0ZXJEZXRhaWxJbmZvLnJvbGUgPSB0aGlzLmNsdXN0ZXJEZXRhaWxJbmZvLmFwcGxpZWRTcGVjLnJhbmNoZXJLdWJlcm5ldGVzRW5naW5lQ29uZmlnLm5vZGVzWzBdLnJvbGU7CiAgICB9IGVsc2UgewogICAgICB0aGlzLmNsdXN0ZXJEZXRhaWxJbmZvLmhvc3RuYW1lID0gdGhpcy5jbHVzdGVyRGV0YWlsSW5mby5pZDsKICAgICAgdGhpcy5jbHVzdGVyRGV0YWlsSW5mby5yb2xlID0gJ2NvbnRyb2xscGxhbmUnOwogICAgfQoKICAgIHRoaXMuaW5mb3JtYXRpb24ucHVzaCh0aGlzLmNsdXN0ZXJEZXRhaWxJbmZvKTsKICB9Cn07"},{"version":3,"sources":["Node.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,GAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AACA,IAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA;AACA;AACA;AACA;AACA;AACA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OALA,EAMA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OANA,EAOA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAPA,EAQA;AAAA,QAAA,IAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OARA,CADA;AAWA,MAAA,WAAA,EAAA;AAXA,KAAA;AAcA,GAtBA;AAuBA,EAAA,OAvBA,qBAuBA;AACA,SAAA,iBAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,iBAAA;;AACA,QAAA,KAAA,iBAAA,CAAA,WAAA,CAAA,6BAAA,IAAA,IAAA,EAAA;AACA,WAAA,iBAAA,CAAA,gBAAA,GAAA,KAAA,iBAAA,CAAA,WAAA,CAAA,6BAAA,CAAA,KAAA,CAAA,CAAA,EAAA,gBAAA;AACA,WAAA,iBAAA,CAAA,IAAA,GAAA,KAAA,iBAAA,CAAA,WAAA,CAAA,6BAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA;AACA,KAHA,MAGA;AACA,WAAA,iBAAA,CAAA,QAAA,GAAA,KAAA,iBAAA,CAAA,EAAA;AACA,WAAA,iBAAA,CAAA,IAAA,GAAA,eAAA;AACA;;AACA,SAAA,WAAA,CAAA,IAAA,CAAA,KAAA,iBAAA;AACA;AAjCA,CAAA","sourcesContent":["<template>\n  <v-container\n    id=\"node\"\n    fluid\n    tag=\"section\"\n  >\n    <v-data-table\n        :headers=\"headers\"\n        :items=\"information\"\n        :items-per-page=\"10\"\n        class=\"elevation-1\"\n    >\n\n    </v-data-table>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\nconst Vue = require('vue');\nvar json_list;\n\nexport default {\n  name: \"Projects\",\n  // data: function (){\n  //   return{\n  //     list:['a','b'],\n  //   };\n  // }\n  data () {\n    return {\n      headers: [\n        { text: '상태', value: 'state'},\n        { text: '노드 이름', value: 'hostnameOverride' },\n        { text: '역할', value: 'role' },\n        { text: '버전', value: 'version.gitVersion' },\n        { text: 'CPU', value: 'cpu'},\n        { text: '메모리', value: 'memory'},\n        { text: '파드', value: 'pods' },\n        { text: '수정/삭제', value: 'actions', sortable: false}\n      ],\n      information: [\n      ],\n    }\n  },\n  created(){\n    this.clusterDetailInfo = this.$store.state.clusterDetailInfo\n    if(this.clusterDetailInfo.appliedSpec.rancherKubernetesEngineConfig != null){\n      this.clusterDetailInfo.hostnameOverride = this.clusterDetailInfo.appliedSpec.rancherKubernetesEngineConfig.nodes[0].hostnameOverride\n      this.clusterDetailInfo.role = this.clusterDetailInfo.appliedSpec.rancherKubernetesEngineConfig.nodes[0].role\n    }else{\n      this.clusterDetailInfo.hostname = this.clusterDetailInfo.id\n      this.clusterDetailInfo.role = 'controllplane'\n    }\n    this.information.push(this.clusterDetailInfo)\n  },\n}\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"],"sourceRoot":"src/views/dashboard/pages"}]}