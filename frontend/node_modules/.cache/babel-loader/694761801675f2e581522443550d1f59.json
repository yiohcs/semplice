{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue","mtime":1608177141987},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cluster.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container\n    id=\"user-profile\"\n    fluid\n    tag=\"section\"\n  >\n    <v-row justify=\"center\">\n      <v-col\n        cols=\"12\"\n        md=\"10\"\n      >\n          <v-data-table\n              :headers=\"headers\"\n              :items=\"information\"\n              :items-per-page=\"10\"\n              class=\"elevation-1\"\n          >\n            <template v-slot:top>\n                <v-divider\n                    class=\"mx-4\"\n                    inset\n                    vertical\n                ></v-divider>\n                <v-spacer></v-spacer>\n                <v-dialog\n                    v-model=\"dialog\"\n                    max-width=\"500px\"\n                >\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-row>\n                      <v-col></v-col>\n                      <v-col></v-col>\n                      <v-col></v-col>\n                      <v-col>\n                        <v-btn\n                            color=\"primary\"\n                            dark\n                            class=\"mb-2\"\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                        >\n                          New Cluster\n                        </v-btn>\n                      </v-col>\n                    </v-row>\n\n                  </template>\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ formTitle }}</span>\n                    </v-card-title>\n\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col\n                              cols=\"12\"\n                              sm=\"6\"\n                              md=\"4\"\n                          >\n                            <v-text-field\n                                v-model=\"editedItem.name\"\n                                label=\"Cluster name\"\n                            ></v-text-field>\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"save\"\n                      >\n                        Save\n                      </v-btn>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"close\"\n                      >\n                        Cancel\n                      </v-btn>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n                <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n                  <v-card>\n                    <v-card-title class=\"headline\">Are you sure you want to <br>delete this cluster?</v-card-title>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">Cancel</v-btn>\n                      <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\">OK</v-btn>\n                      <v-spacer></v-spacer>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n            </template>\n            <template v-slot:item.actions=\"{ item }\">\n              <v-icon\n                  small\n                  class=\"mr-2\"\n                  @click=\"editItem(item)\"\n              >\n                mdi-pencil\n              </v-icon>\n              <v-icon\n                  small\n                  @click=\"deleteItem(item)\"\n              >\n                mdi-delete\n              </v-icon>\n            </template>\n<!--            <template v-slot:no-data>-->\n<!--              <v-btn-->\n<!--                  color=\"primary\"-->\n<!--                  @click=\"initialize\"-->\n<!--              >-->\n<!--                Reset-->\n<!--              </v-btn>-->\n<!--            </template>-->\n          </v-data-table>\n<!--          <v-btn color=\"primary\" @click=\"cluster_Delete()\">Delete</v-btn>-->\n\n\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\nconst Vue = require('vue');\nvar item_id;\nvar create_name;\n\nexport default {\n  name: \"Clusters\",\n  // data: function (){\n  //   return{\n  //     list:['a','b'],\n  //   };\n  // }\n  methods:{\n    editItem (item) {\n      this.editedIndex = this.information.indexOf(item)\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n\n    deleteItem (item) {\n      if(item.name != 'local') {\n        console.log(item.id)\n        item_id = item.id\n        this.editedIndex = this.information.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialogDelete = true\n      }\n    },\n\n    deleteItemConfirm () {\n      this.information.splice(this.editedIndex, 1)\n      this.closeDelete()\n      this.cluster_Delete(item_id);\n    },\n\n    close () {\n      this.dialog = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    closeDelete () {\n      this.dialogDelete = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    save () {\n      if (this.editedIndex > -1) {\n        Object.assign(this.information[this.editedIndex], this.editedItem)\n      } else {\n        // this.information.push(this.editedItem)\n        this.cluster_Create(this.editedItem.name)\n      }\n      this.close()\n    },\n    cluster_Delete(id){\n      let _self = this;\n      console.log('delete');\n      axios.get('/api/clusters/delete/'+id,{\n      }).then(function (response){\n        const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n        const timer = async () => {\n          await _sleep(1000);\n          console.log('First');\n          _self.cluster_Get()\n          // await _sleep(1000);\n          // console.log('Second');\n        };\n        timer();\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_Create(name){\n      let _self = this;\n      console.log('delete');\n      axios.get('/api/clusters/create/'+name,{\n      }).then(function (response){\n        const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n        const timer = async () => {\n          await _sleep(1000);\n          console.log('First');\n\n          _self.cluster_Get()\n          // await _sleep(1000);\n          // console.log('Second');\n        };\n        timer();\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_Get(){\n      let _self = this;\n      axios.get('/api/clusters',{\n      }).then(function (response){\n\n        let jsonStr = JSON.stringify(response.data);\n        let json = JSON.parse(jsonStr);\n\n        _self.information = json;\n        for (let obj of _self.information) {\n          console.log(obj);\n        }\n        console.log(_self.information);\n        // json_list = json;\n        // for(var i=0;i<json.length;i++){\n        //   console.log(json[i].memory);\n        // };\n\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n  }, // end of methods\n\n  data () {\n    return{\n      dialog: false,\n      dialogDelete: false,\n      headers: [\n        { text: 'State', value: 'state'},\n        { text: 'Cluster Name', value: 'name' },\n        { text: 'Provider', value: 'provider' },\n        { text: 'Nodes', value: 'nodeCount' },\n        { text: 'CPU', value: 'cpuList'},\n        { text: 'RAM', value: 'memoryList'},\n        { text: 'Actions', value: 'actions', sortable: false },\n      ],\n      information: [\n      ],\n      editedIndex: -1,\n      editedItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        id: '',\n      },\n      defaultItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        id: '',\n      },\n    }\n  }, // end of data\n  computed: {\n    formTitle () {\n      return this.editedIndex === -1 ? 'Create Cluster' : 'Edit Cluster Info'\n    },\n  },\n  created(){\n    var _self = this;\n\n    console.log(this.$store.state.bearerToken)\n    console.log(this.$store.state.userId)\n\n    // if('' == this.$store.state.bearerToken || '' == this.$store.state.userId){\n    //   this.$router.push('/login')\n    //   return;\n    // }\n\n    axios.get('/api/clusters',{\n    }).then(function (response){\n\n      var jsonStr = JSON.stringify(response.data);\n      var json = JSON.parse(jsonStr);\n\n      let cpuList = [];\n      let memoryList = [];\n\n      _self.information = json;\n\n      for(var i=0;i<json.length;i++){\n          cpuList[i] = json[i].requested.cpu + '/' + json[i].capacity.cpu + ' cores';\n          memoryList[i] = json[i].requested.memory + '/' + json[i].capacity.memory;\n        _self.information[i].cpuList = cpuList[i];\n        _self.information[i].memoryList = memoryList[i];\n      }\n\n      console.log('cluseter : ' + _self.$store.state.bearerToken)\n      // console.log(_self.information);\n      // for (var obj of _self.information) {\n      //   console.log(obj);\n      // }\n      // json_list = json;\n      // for(var i=0;i<json.length;i++){\n      //   console.log(json[i].memory);\n      // };\n\n\n    }).catch(function (error){\n      console.log(error);\n    }).finally(function (){\n\n    });\n  }, // end of created\n}\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"],"sourceRoot":"src/views/dashboard/pages"}]}