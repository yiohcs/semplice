{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue","mtime":1609235687826},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cluster.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container\n    id=\"user-profile\"\n    fluid\n    tag=\"section\"\n  >\n    <v-row justify=\"center\">\n      <v-col\n        cols=\"12\"\n        md=\"10\"\n      >\n          <v-data-table\n              :headers=\"headers\"\n              :items=\"information\"\n              :items-per-page=\"10\"\n              class=\"elevation-1\"\n          >\n            <template v-slot:top>\n                <v-divider\n                    class=\"mx-4\"\n                    inset\n                    vertical\n                ></v-divider>\n                <v-spacer></v-spacer>\n              <div>\n                <v-btn\n                    color=\"primary\"\n                    dark\n                    class=\"mb-2\"\n                    @click=\"createCluster\"\n                    style=\"margin-left: 60%; display:inline-block;\"\n                >\n                  클러스터 생성\n                </v-btn>\n                <v-btn\n                    color=\"primary\"\n                    dark\n                    class=\"mb-2\"\n                    @click=\"importCluster\"\n                    style=\"margin-left:3%; display:inline-block;\"\n                >\n                  클러스터 추가\n                </v-btn>\n              </div>\n\n                <v-dialog v-model=\"dialogCreate\" max-width=\"700px\">\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ clusterFormTitle }}</span>\n                    </v-card-title>\n\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col\n                              cols=\"12\"\n                              sm=\"6\"\n                              md=\"4\"\n                          >\n                            <v-text-field\n                                v-model=\"editedItem.name\"\n                                label=\"Cluster name\"\n                            ></v-text-field>\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n\n                    <div v-show=\"showTokenCommand\" style=\"margin-left:5%; margin-right:5%; \">\n                      <span>{{newCluster == -1 ? '이미 실행중인 하나 이상의 기존 머신에서 이 Docker 명령을 실행하세요.' : '지원되는 Kubernetes 버전을 실행하는 기존 Kubernetes 클러스터에서 아래 kubectl 명령을 실행하여 Rancher로 가져옵니다.'}}<br></span>\n                      <span>{{newCluster == -1 ? nodeCommand : command }}</span>\n                      <span><br><br>{{newCluster == -1 ? '' : '\\'알 수없는 기관에서 서명 한 인증서\\'에 대한 오류가 발생하는 경우 대신 아래 명령을 실행하여 인증서 검사를 우회하세요.'}}<br></span>\n                      <span>{{newCluster == -1 ? '' : insecureCommand}}</span>\n                    </div>\n\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"clusterCreateImport\"\n                      >\n                        Save\n                      </v-btn>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"close\"\n                      >\n                        Cancel\n                      </v-btn>\n                    </v-card-actions>\n                  </v-card>\n\n                </v-dialog>\n\n                <v-dialog\n                    v-model=\"dialog\"\n                    max-width=\"600px\"\n                >\n<!--                  <template v-slot:activator=\"{ on, attrs }\">-->\n<!--                    <v-row>-->\n<!--                      <v-col md=\"6\"></v-col>-->\n<!--                      <v-col md=\"3\">-->\n<!--                        <v-btn-->\n<!--                            color=\"primary\"-->\n<!--                            dark-->\n<!--                            class=\"mb-2\"-->\n<!--                            v-bind=\"attrs\"-->\n<!--                            v-on=\"on\"-->\n<!--                        >-->\n<!--                          New Cluster-->\n<!--                        </v-btn>-->\n<!--                      </v-col>-->\n\n<!--                      <v-col md=\"2\">-->\n<!--                        <v-btn-->\n<!--                            color=\"primary\"-->\n<!--                            dark-->\n<!--                            class=\"mb-2\"-->\n<!--                            v-bind=\"attrs\"-->\n<!--                            v-on=\"on\"-->\n<!--                        >-->\n<!--                          Import Cluster-->\n<!--                        </v-btn>-->\n<!--                      </v-col>-->\n<!--                    </v-row>-->\n\n<!--                  </template>-->\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ formTitle }}</span>\n                    </v-card-title>\n\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col\n                              cols=\"12\"\n                              sm=\"6\"\n                              md=\"4\"\n                          >\n                            <v-text-field\n                                v-model=\"editedItem.name\"\n                                label=\"Cluster name\"\n                            ></v-text-field>\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"save\"\n                      >\n                        Save\n                      </v-btn>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"close\"\n                      >\n                        Cancel\n                      </v-btn>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n                <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n                  <v-card>\n                    <v-card-title class=\"headline\">클러스터를 삭제하시겠습니까?</v-card-title>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\">삭제</v-btn>\n                      <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">취소</v-btn>\n                      <v-spacer></v-spacer>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n            </template>\n            <template v-slot:item.actions=\"{ item }\">\n              <v-icon\n                  small\n                  class=\"mr-2\"\n                  @click=\"editItem(item)\"\n              >\n                mdi-pencil\n              </v-icon>\n              <v-icon\n                  small\n                  @click=\"deleteItem(item)\"\n              >\n                mdi-delete\n              </v-icon>\n            </template>\n<!--            <template v-slot:no-data>-->\n<!--              <v-btn-->\n<!--                  color=\"primary\"-->\n<!--                  @click=\"initialize\"-->\n<!--              >-->\n<!--                Reset-->\n<!--              </v-btn>-->\n<!--            </template>-->\n          </v-data-table>\n<!--          <v-btn color=\"primary\" @click=\"cluster_Delete()\">Delete</v-btn>-->\n\n\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\nconst Vue = require('vue');\nimport drawer from \"../components/core/Drawer\";\n\n\nexport default {\n  name: \"Clusters\",\n  // data: function (){\n  //   return{\n  //     list:['a','b'],\n  //   };\n  // }\n  methods:{\n    editItem (item) {\n      this.editedIndex = this.information.indexOf(item)\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n\n    createCluster (item) {\n      this.newCluster = -1\n      this.showTokenCommand = false\n      this.editedItem = Object.assign({}, item)\n      this.dialogCreate = true\n    },\n\n    importCluster (item) {\n      this.newCluster = 1\n      this.showTokenCommand = false\n      this.editedItem = Object.assign({}, item)\n      this.dialogCreate = true\n    },\n\n    clusterCreateImport (item) {\n      Object.assign({}, item)\n      console.log(this.editedItem.name)\n      // let showTokenCommand = document.getElementById('showTokenCommand')\n      // showTokenCommand.style.visibility = 'visible'\n\n      const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n      const timer = async () => {\n\n        this.cluster_Create(this.editedItem.name)\n\n        await _sleep(3000);\n        console.log('First');\n\n        console.log('tokenData >>>> ')\n        console.log(this.resData)\n        if (this.newCluster == -1) {\n          this.nodeCommand = this.resData.nodeCommand\n        } else {\n          this.command = this.resData.command\n          this.insecureCommand = this.resData.insecureCommand\n        }\n        this.showTokenCommand = true\n\n        // await _sleep(1000);\n        // console.log('Second');\n      };\n      timer();\n\n      // this.close()\n    },\n\n    deleteItem (item) {\n      if(item.name != 'local') {\n        console.log(item.id)\n        this.item_id = item.id\n        this.editedIndex = this.information.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialogDelete = true\n      }\n    },\n\n    deleteItemConfirm () {\n      this.information.splice(this.editedIndex, 1)\n      this.closeDelete()\n      this.cluster_Delete(this.item_id);\n    },\n\n    close () {\n      this.dialog = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    closeDelete () {\n      this.dialogDelete = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    save () {\n      if (this.editedIndex > -1) {\n        Object.assign(this.information[this.editedIndex], this.editedItem)\n      } else {\n        // this.information.push(this.editedItem)\n        this.cluster_Create(this.editedItem.name)\n      }\n      this.close()\n    },\n\n    cluster_Delete(id){\n      let _self = this;\n      console.log('delete');\n      axios.get('/api/clusters/delete/'+id,{\n      }).then(function (response){\n        const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n        const timer = async () => {\n          await _sleep(1000);\n          console.log('First');\n          _self.cluster_Get()\n          // await _sleep(1000);\n          // console.log('Second');\n        };\n        timer();\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_Create(name){\n      let _self = this;\n      let returnToken\n      console.log('Create');\n      axios.get('/api/clusters/create/'+name,{\n      }).then(function (response){\n        // console.log(response.data)\n\n        const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n        const timer = async () => {\n\n          _self.cluster_generateToken(response.data.id)\n\n          await _sleep(1500);\n          console.log('First');\n          _self.cluster_Get()\n\n          // await _sleep(1000);\n          // console.log('Second');\n        };\n        timer();\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_generateToken(name){\n      let _self = this;\n      console.log('generateToken');\n      axios.get('/api/clusters/generateToken/'+name,{\n      }).then(function (response){\n        console.log(response.data)\n        console.log(response.data.nodeCommand)\n\n        _self.resData = response.data\n          // await _sleep(1000);\n          // console.log('Second');\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_Get(){\n      let _self = this;\n      console.log('cluster_Get')\n\n      axios.get('/api/clusters',{\n      }).then(function (response){\n\n        let jsonStr = JSON.stringify(response.data);\n        let json = JSON.parse(jsonStr);\n\n        let cpuList = [];\n        let memoryList = [];\n\n        _self.information = json;\n\n        for(let i=0;i<json.length;i++){\n          cpuList[i] = json[i].requested.cpu + '/' + json[i].capacity.cpu + ' cores';\n          memoryList[i] = json[i].requested.memory + '/' + json[i].capacity.memory;\n          _self.information[i].cpuList = cpuList[i];\n          _self.information[i].memoryList = memoryList[i];\n        }\n\n        let titleList = [];\n\n        for(let i=0;i<json.length;i++){\n          titleList[i] = json[i].name;\n        }\n        console.log(drawer.data.items)\n\n        //drawer.items.childItem = titleList\n\n        // json_list = json;\n        // for(var i=0;i<json.length;i++){\n        //   console.log(json[i].memory);\n        // };\n\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n  }, // end of methods\n\n  data () {\n    return{\n      dialog: false,\n      dialogDelete: false,\n      dialogCreate: false,\n      showTokenCommand: false,\n      resData: '',\n      item_id: '',\n      headers: [\n        { text: '상태', value: 'state'},\n        { text: '클러스터 이름', value: 'name' },\n        { text: '제공자', value: 'provider' },\n        { text: '노드', value: 'nodeCount' },\n        { text: 'CPU', value: 'cpuList'},\n        { text: 'RAM', value: 'memoryList'},\n        { text: '수정/삭제', value: 'actions', sortable: false },\n      ],\n      information: [\n      ],\n      editedIndex: -1,\n      newCluster: -1,\n      command: 'aa',\n      insecureCommand: 'bb',\n      nodeCommand: 'cc',\n      editedItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        id: '',\n      },\n      defaultItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        id: '',\n      },\n    }\n  }, // end of data\n  computed: {\n    formTitle () {\n      return this.editedIndex === -1 ? 'Create Cluster' : 'Edit Cluster Info'\n    },\n\n    clusterFormTitle () {\n      return this.newCluster === -1 ? 'Create Cluster' : 'Import Cluster'\n    },\n  },\n  created(){\n    let _self = this;\n\n    console.log(this.$store.state.bearerToken)\n    console.log(this.$store.state.userId)\n\n    // if('' == this.$store.state.bearerToken || '' == this.$store.state.userId){\n    //   this.$router.push('/login')\n    //   return;\n    // }\n\n\n    axios.get('/api/clusters',{\n    }).then(function (response){\n\n      let jsonStr = JSON.stringify(response.data);\n      let json = JSON.parse(jsonStr);\n\n      let cpuList = [];\n      let memoryList = [];\n\n      _self.information = json;\n\n      for(let i=0;i<json.length;i++){\n          cpuList[i] = json[i].requested.cpu + '/' + json[i].capacity.cpu + ' cores';\n          memoryList[i] = json[i].requested.memory + '/' + json[i].capacity.memory;\n        _self.information[i].cpuList = cpuList[i];\n        _self.information[i].memoryList = memoryList[i];\n      }\n\n      // console.log('cluseter : ' + _self.$store.state.bearerToken)\n      // console.log(_self.information);\n      // for (var obj of _self.information) {\n      //   console.log(obj);\n      // }\n      // json_list = json;\n      // for(var i=0;i<json.length;i++){\n      //   console.log(json[i].memory);\n      // };\n\n\n    }).catch(function (error){\n      console.log(error);\n    }).finally(function (){\n\n    });\n  }, // end of created\n}\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"],"sourceRoot":"src/views/dashboard/pages"}]}