{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue","mtime":1609386820438},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cluster.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwNA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA","file":"Cluster.vue","sourceRoot":"src/views/dashboard/pages","sourcesContent":["<template>\n  <v-container\n    id=\"user-profile\"\n    fluid\n    tag=\"section\"\n  >\n    <v-row justify=\"center\">\n      <v-col\n        cols=\"12\"\n        md=\"10\"\n      >\n          <v-data-table\n              :headers=\"headers\"\n              :items=\"information\"\n              :items-per-page=\"10\"\n              class=\"elevation-1\"\n              @click:row=\"dataClick\"\n          >\n            <template v-slot:top>\n                <v-divider\n                    class=\"mx-4\"\n                    inset\n                    vertical\n                ></v-divider>\n                <v-spacer></v-spacer>\n              <div>\n                <v-btn\n                    color=\"primary\"\n                    dark\n                    class=\"mb-2\"\n                    @click=\"createCluster\"\n                    style=\"margin-left: 55%; display:inline-block;\"\n                >\n                  새 클러스터 생성\n                </v-btn>\n                <v-btn\n                    color=\"primary\"\n                    dark\n                    class=\"mb-2\"\n                    @click=\"importCluster\"\n                    style=\"margin-left:4%; display:inline-block;\"\n                >\n                  기존 클러스터 추가\n                </v-btn>\n              </div>\n\n                <v-dialog v-model=\"dialogCreate\" max-width=\"700px\">\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ clusterFormTitle }}</span>\n                    </v-card-title>\n\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col\n                              cols=\"12\"\n                              sm=\"6\"\n                              md=\"4\"\n                          >\n                            <v-text-field\n                                v-model=\"editedItem.name\"\n                                label=\"Cluster name\"\n                            ></v-text-field>\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n\n                    <div v-show=\"showTokenCommand\" style=\"margin-left:5%; margin-right:5%; \">\n                      <span>{{newCluster == -1 ? '이미 실행중인 하나 이상의 기존 머신에서 이 Docker 명령을 실행하세요.' : '지원되는 Kubernetes 버전을 실행하는 기존 Kubernetes 클러스터에서 아래 kubectl 명령을 실행하여 Rancher로 가져옵니다.'}}<br></span>\n                      <span>{{newCluster == -1 ? nodeCommand : command }}</span>\n                      <span><br><br>{{newCluster == -1 ? '' : '\\'알 수없는 기관에서 서명 한 인증서\\'에 대한 오류가 발생하는 경우 대신 아래 명령을 실행하여 인증서 검사를 우회하세요.'}}<br></span>\n                      <span>{{newCluster == -1 ? '' : insecureCommand}}</span>\n                    </div>\n\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"clusterCreateImport\"\n                      >\n                        Save\n                      </v-btn>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"close\"\n                      >\n                        Cancel\n                      </v-btn>\n                    </v-card-actions>\n                  </v-card>\n\n                </v-dialog>\n\n                <v-dialog\n                    v-model=\"dialog\"\n                    max-width=\"600px\"\n                >\n<!--                  <template v-slot:activator=\"{ on, attrs }\">-->\n<!--                    <v-row>-->\n<!--                      <v-col md=\"6\"></v-col>-->\n<!--                      <v-col md=\"3\">-->\n<!--                        <v-btn-->\n<!--                            color=\"primary\"-->\n<!--                            dark-->\n<!--                            class=\"mb-2\"-->\n<!--                            v-bind=\"attrs\"-->\n<!--                            v-on=\"on\"-->\n<!--                        >-->\n<!--                          New Cluster-->\n<!--                        </v-btn>-->\n<!--                      </v-col>-->\n\n<!--                      <v-col md=\"2\">-->\n<!--                        <v-btn-->\n<!--                            color=\"primary\"-->\n<!--                            dark-->\n<!--                            class=\"mb-2\"-->\n<!--                            v-bind=\"attrs\"-->\n<!--                            v-on=\"on\"-->\n<!--                        >-->\n<!--                          Import Cluster-->\n<!--                        </v-btn>-->\n<!--                      </v-col>-->\n<!--                    </v-row>-->\n\n<!--                  </template>-->\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ formTitle }}</span>\n                    </v-card-title>\n\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col\n                              cols=\"12\"\n                              sm=\"6\"\n                              md=\"4\"\n                          >\n                            <v-text-field\n                                v-model=\"editedItem.name\"\n                                label=\"Cluster name\"\n                            ></v-text-field>\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"save\"\n                      >\n                        Save\n                      </v-btn>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"close\"\n                      >\n                        Cancel\n                      </v-btn>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n                <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n                  <v-card>\n                    <v-card-title class=\"headline\">클러스터를 삭제하시겠습니까?</v-card-title>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\">삭제</v-btn>\n                      <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">취소</v-btn>\n                      <v-spacer></v-spacer>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n            </template>\n            <template v-slot:item.actions=\"{ item }\">\n              <v-icon\n                  small\n                  class=\"mr-2\"\n                  @click=\"editItem(item)\"\n              >\n                mdi-pencil\n              </v-icon>\n              <v-icon\n                  small\n                  @click=\"deleteItem(item)\"\n              >\n                mdi-delete\n              </v-icon>\n            </template>\n<!--            <template v-slot:no-data>-->\n<!--              <v-btn-->\n<!--                  color=\"primary\"-->\n<!--                  @click=\"initialize\"-->\n<!--              >-->\n<!--                Reset-->\n<!--              </v-btn>-->\n<!--            </template>-->\n          </v-data-table>\n<!--          <v-btn color=\"primary\" @click=\"cluster_Delete()\">Delete</v-btn>-->\n\n\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\nconst Vue = require('vue');\nimport drawer from \"../components/core/Drawer\";\n\n\nexport default {\n  name: \"Clusters\",\n  // data: function (){\n  //   return{\n  //     list:['a','b'],\n  //   };\n  // }\n  methods:{\n    editItem (item) {\n      this.editedIndex = this.information.indexOf(item)\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n\n    createCluster (item) {\n      this.newCluster = -1\n      this.showTokenCommand = false\n      this.editedItem = Object.assign({}, item)\n      this.dialogCreate = true\n    },\n\n    importCluster (item) {\n      this.newCluster = 1\n      this.showTokenCommand = false\n      this.editedItem = Object.assign({}, item)\n      this.dialogCreate = true\n    },\n\n    clusterCreateImport (item) {\n      Object.assign({}, item)\n      console.log(this.editedItem.name)\n      // let showTokenCommand = document.getElementById('showTokenCommand')\n      // showTokenCommand.style.visibility = 'visible'\n\n      const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n      const timer = async () => {\n\n        this.cluster_Create(this.editedItem.name)\n\n        await _sleep(3000);\n        console.log('First');\n\n        console.log('tokenData >>>> ')\n        console.log(this.resData)\n        if (this.newCluster == -1) {\n          this.nodeCommand = this.resData.nodeCommand\n        } else {\n          this.command = this.resData.command\n          this.insecureCommand = this.resData.insecureCommand\n        }\n        this.showTokenCommand = true\n\n        // await _sleep(1000);\n        // console.log('Second');\n      };\n      timer();\n\n      // this.close()\n    },\n\n    deleteItem (item) {\n      if(item.name != 'local') {\n        console.log(item.id)\n        this.item_id = item.id\n        this.editedIndex = this.information.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialogDelete = true\n      }\n    },\n\n    deleteItemConfirm () {\n      this.information.splice(this.editedIndex, 1)\n      this.closeDelete()\n      this.cluster_Delete(this.item_id);\n    },\n\n    close () {\n      this.dialog = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    closeDelete () {\n      this.dialogDelete = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    save () {\n      if (this.editedIndex > -1) {\n        Object.assign(this.information[this.editedIndex], this.editedItem)\n      } else {\n        // this.information.push(this.editedItem)\n        this.cluster_Create(this.editedItem.name)\n      }\n      this.close()\n    },\n\n    cluster_Delete(id){\n      let _self = this;\n      console.log('delete');\n      axios.get('/api/clusters/delete/'+id,{\n      }).then(function (response){\n        const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n        const timer = async () => {\n          await _sleep(1000);\n          console.log('First');\n          _self.cluster_Get()\n          // await _sleep(1000);\n          // console.log('Second');\n        };\n        timer();\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_Create(name){\n      let _self = this;\n      let returnToken\n      console.log('Create');\n      axios.get('/api/clusters/create/'+name,{\n      }).then(function (response){\n        // console.log(response.data)\n\n        const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n        const timer = async () => {\n\n          _self.cluster_generateToken(response.data.id)\n\n          await _sleep(1500);\n          console.log('First');\n          _self.cluster_Get()\n\n          // await _sleep(1000);\n          // console.log('Second');\n        };\n        timer();\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_generateToken(name){\n      let _self = this;\n      console.log('generateToken');\n      axios.get('/api/clusters/generateToken/'+name,{\n      }).then(function (response){\n        console.log(response.data)\n        console.log(response.data.nodeCommand)\n\n        _self.resData = response.data\n          // await _sleep(1000);\n          // console.log('Second');\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_Get(){\n      let _self = this;\n      console.log('cluster_Get')\n\n      axios.get('/api/clusters',{\n      }).then(function (response){\n\n        let jsonStr = JSON.stringify(response.data);\n        let json = JSON.parse(jsonStr);\n\n        let cpuList = [];\n        let memoryList = [];\n\n        _self.information = json;\n\n        for(let i=0;i<json.length;i++){\n          cpuList[i] = json[i].requested.cpu + '/' + json[i].capacity.cpu + ' cores';\n          memoryList[i] = json[i].requested.memory + '/' + json[i].capacity.memory;\n          _self.information[i].cpuList = cpuList[i];\n          _self.information[i].memoryList = memoryList[i];\n        }\n\n\n        //drawer.items.childItem = titleList\n\n        // json_list = json;\n        // for(var i=0;i<json.length;i++){\n        //   console.log(json[i].memory);\n        // };\n\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    dataClick(row){\n      this.information.map((item, index) =>{\n        item.selected = item === row\n\n        let clusterDetailInfo = {}\n        clusterDetailInfo = row\n\n        this.$store.commit('SET_CLUSTER_DETAIL_INFO', clusterDetailInfo)\n        this.$store.commit('SET_CPU', row.cpuList)\n        this.$store.commit('SET_MEMORY', row.memoryList)\n        this.$store.commit('SET_PODS', row.podsList)\n        this.$store.commit('SET_NODES', row.appliedSpec.rancherKubernetesEngineConfig.nodes)\n        this.$store.commit('SET_HOSTNAME_OVERRIDE', row.appliedSpec.rancherKubernetesEngineConfig.nodes[0].hostnameOverride)\n        this.$store.commit('SET_ROLE', row.appliedSpec.rancherKubernetesEngineConfig.nodes[0].role)\n        this.$store.commit('SET_GIT_VERSION', row.version.gitVersion)\n\n        this.$router.push('/c/'+row.id)\n      });\n    },\n  }, // end of methods\n\n  data () {\n    return{\n      dialog: false,\n      dialogDelete: false,\n      dialogCreate: false,\n      showTokenCommand: false,\n      resData: '',\n      item_id: '',\n      headers: [\n        { text: '상태', value: 'state'},\n        { text: '클러스터 이름', value: 'name' },\n        { text: '제공자', value: 'provider' },\n        { text: '노드', value: 'nodeCount' },\n        { text: 'CPU', value: 'cpuList'},\n        { text: 'RAM', value: 'memoryList'},\n        { text: '수정/삭제', value: 'actions', sortable: false },\n      ],\n      information: [\n      ],\n      editedIndex: -1,\n      newCluster: -1,\n      command: 'aa',\n      insecureCommand: 'bb',\n      nodeCommand: 'cc',\n      editedItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        id: '',\n      },\n      defaultItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        version:{\n          gitVersion: '',\n        },\n        id: '',\n      },\n    }\n  }, // end of data\n  computed: {\n    formTitle () {\n      return this.editedIndex === -1 ? 'Create Cluster' : 'Edit Cluster Info'\n    },\n\n    clusterFormTitle () {\n      return this.newCluster === -1 ? 'Create Cluster' : 'Import Cluster'\n    },\n  },\n  created(){\n    let _self = this;\n\n    console.log(this.$store.state.bearerToken)\n    console.log(this.$store.state.userId)\n\n    // if('' == this.$store.state.bearerToken || '' == this.$store.state.userId){\n    //   this.$router.push('/login')\n    //   return;\n    // }\n\n\n    axios.get('/api/clusters',{\n    }).then(function (response){\n\n      let jsonStr = JSON.stringify(response.data);\n      let json = JSON.parse(jsonStr);\n\n      let cpuList = [];\n      let memoryList = [];\n      let podsList = [];\n\n      _self.information = json;\n\n      for(let i=0;i<json.length;i++){\n        cpuList[i] = json[i].requested.cpu + '/' + json[i].capacity.cpu + ' cores';\n        memoryList[i] = json[i].requested.memory + '/' + json[i].capacity.memory;\n        podsList[i] = json[i].requested.pods + '/' + json[i].capacity.pods;\n        _self.information[i].cpuList = cpuList[i];\n        _self.information[i].memoryList = memoryList[i];\n        _self.information[i].podsList = podsList[i];\n      }\n\n      // console.log('cluseter : ' + _self.$store.state.bearerToken)\n      // console.log(_self.information);\n      // for (var obj of _self.information) {\n      //   console.log(obj);\n      // }\n      // json_list = json;\n      // for(var i=0;i<json.length;i++){\n      //   console.log(json[i].memory);\n      // };\n\n\n    }).catch(function (error){\n      console.log(error);\n    }).finally(function (){\n\n    });\n  }, // end of created\n}\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"]}]}