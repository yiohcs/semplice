{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/component/Notifications.vue?vue&type=template&id=7ca97dd8&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/component/Notifications.vue","mtime":1607335907000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}