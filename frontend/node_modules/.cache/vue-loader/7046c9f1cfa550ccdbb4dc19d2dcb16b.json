{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/login/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/login/Login.vue","mtime":1608255530800},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTsKCmltcG9ydCB7IHJlcXVpcmVkLCBkaWdpdHMsIGVtYWlsLCBtYXgsIHJlZ2V4IH0gZnJvbSAndmVlLXZhbGlkYXRlL2Rpc3QvcnVsZXMnCmltcG9ydCB7IGV4dGVuZCwgVmFsaWRhdGlvbk9ic2VydmVyLCBWYWxpZGF0aW9uUHJvdmlkZXIsIHNldEludGVyYWN0aW9uTW9kZSB9IGZyb20gJ3ZlZS12YWxpZGF0ZScKCnNldEludGVyYWN0aW9uTW9kZSgnZWFnZXInKQoKZXh0ZW5kKCdyZXF1aXJlZCcsIHsKICAuLi5yZXF1aXJlZCwKICBtZXNzYWdlOiAne19maWVsZF99IGNhbiBub3QgYmUgZW1wdHknLAp9KQoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFZhbGlkYXRpb25Qcm92aWRlciwKICAgIFZhbGlkYXRpb25PYnNlcnZlciwKICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICB1c2VybmFtZTogJycsCiAgICBwYXNzd29yZDogJycsCgogIH0pLAoKICBtZXRob2RzOiB7CgoKICAgIHNldFVzZXJUb2tlbkFuZElkKCl7CiAgICAgIGxldCB1c2VyRGF0YSA9IHsKICAgICAgICBiZWFyZXJUb2tlbjogdGhpcy4kc3RvcmUuc3RhdGUuYmVhcmVyVG9rZW4sCiAgICAgICAgdXNlcklkOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySWQsCiAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuc3RhdGUubmFtZSwKICAgICAgfQogICAgICBheGlvcy5wb3N0KCcvYXBpL3VzZXJzL3NldFRva2VuQW5kSWQvJyx1c2VyRGF0YQogICAgICApLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKXsKCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcil7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpewoKICAgICAgfSk7CiAgICB9LAoKICAgIHNldENsdXN0ZXJUb2tlbkFuZElkKCl7CiAgICAgIGxldCB1c2VyRGF0YSA9IHsKICAgICAgICBiZWFyZXJUb2tlbjogdGhpcy4kc3RvcmUuc3RhdGUuYmVhcmVyVG9rZW4sCiAgICAgICAgdXNlcklkOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySWQsCiAgICAgICAgbmFtZTogdGhpcy4kc3RvcmUuc3RhdGUubmFtZSwKICAgICAgfQogICAgICBheGlvcy5wb3N0KCcvYXBpL2NsdXN0ZXJzL3NldFRva2VuQW5kSWQvJyx1c2VyRGF0YQogICAgICApLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKXsKCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcil7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpewoKICAgICAgfSk7CiAgICB9LAoKICAgIHNldExvZ2luVG9rZW5BbmRJZCgpewogICAgICBsZXQgdXNlckRhdGEgPSB7CiAgICAgICAgYmVhcmVyVG9rZW46IHRoaXMuJHN0b3JlLnN0YXRlLmJlYXJlclRva2VuLAogICAgICAgIHVzZXJJZDogdGhpcy4kc3RvcmUuc3RhdGUudXNlcklkLAogICAgICAgIG5hbWU6IHRoaXMuJHN0b3JlLnN0YXRlLm5hbWUsCiAgICAgIH0KICAgICAgYXhpb3MucG9zdCgnL2FwaS9sb2dpbi9zZXRUb2tlbkFuZElkLycsdXNlckRhdGEKICAgICAgKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSl7CgogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSkuZmluYWxseShmdW5jdGlvbiAoKXsKCiAgICAgIH0pOwogICAgfSwKCiAgICBzdWJtaXQgKHJlcykgewogICAgICBsZXQgX3NlbGYgPSB0aGlzCiAgICAgIC8vIHRoaXMuJHJlZnMub2JzZXJ2ZXIudmFsaWRhdGUoKQogICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICBjb25zb2xlLmxvZyhyZXMudGFyZ2V0WzBdLnZhbHVlKTsKICAgICAgY29uc29sZS5sb2cocmVzLnRhcmdldFsxXS52YWx1ZSk7CiAgICAgIGxldCBkYXRhID0gewogICAgICAgIHVzZXJuYW1lOiByZXMudGFyZ2V0WzBdLnZhbHVlLAogICAgICAgIHBhc3N3b3JkOiByZXMudGFyZ2V0WzFdLnZhbHVlLAogICAgICB9CiAgICAgIGF4aW9zLnBvc3QoJy9hcGkvdXNlcnMvbG9naW5Vc2VyJyxkYXRhCiAgICAgICkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhLnRva2VuKTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhLnVzZXJJZCk7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS5uYW1lKTsKCiAgICAgICAgX3NlbGYuJHN0b3JlLmNvbW1pdCgnU0VUX1RPS0VOJywgcmVzcG9uc2UuZGF0YS50b2tlbikKICAgICAgICBfc2VsZi4kc3RvcmUuY29tbWl0KCdTRVRfVVNFUklEJywgcmVzcG9uc2UuZGF0YS51c2VySWQpCiAgICAgICAgX3NlbGYuJHN0b3JlLmNvbW1pdCgnU0VUX05BTUUnLCByZXNwb25zZS5kYXRhLm5hbWUpCgoKICAgICAgICBsZXQgdG9kYXkgPSBuZXcgRGF0ZSgpCiAgICAgICAgbGV0IGxvZ2luVGltZSA9IHRvZGF5LmdldFRpbWUoKQogICAgICAgIGNvbnNvbGUubG9nKCd0aW1lOiAnICsgdG9kYXkuZ2V0VGltZSgpKQoKICAgICAgICBfc2VsZi4kc3RvcmUuY29tbWl0KCdTRVRfVElNRScsIGxvZ2luVGltZSkKCiAgICAgICAgY29uc29sZS5sb2coX3NlbGYuJHN0b3JlLnN0YXRlLmJlYXJlclRva2VuKQogICAgICAgIGNvbnNvbGUubG9nKF9zZWxmLiRzdG9yZS5zdGF0ZS51c2VySWQpCiAgICAgICAgY29uc29sZS5sb2coX3NlbGYuJHN0b3JlLnN0YXRlLm5hbWUpCgogICAgICAgIF9zZWxmLnNldFVzZXJUb2tlbkFuZElkKCkKICAgICAgICBfc2VsZi5zZXRDbHVzdGVyVG9rZW5BbmRJZCgpCiAgICAgICAgX3NlbGYuc2V0TG9naW5Ub2tlbkFuZElkKCkKCiAgICAgICAgX3NlbGYuJHJvdXRlci5wdXNoKCcvJykKCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcil7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpewoKICAgICAgfSk7CiAgICB9LAogICAgY2xlYXIgKCkgewogICAgICB0aGlzLnVzZXJuYW1lID0gJycKICAgICAgdGhpcy5wYXNzd29yZCA9ICcnCiAgICAgIHRoaXMuJHJlZnMub2JzZXJ2ZXIucmVzZXQoKQogICAgfSwKICB9LAp9Cgo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/dashboard/login","sourcesContent":["<template>\n  <v-container\n    id=\"user-login\"\n    fluid\n    tag=\"section\"\n  >\n    <v-row justify=\"center\">\n      <v-col\n          cols=\"12\"\n          md=\"4\"\n      >\n        <validation-observer\n        ref=\"observer\"\n        v-slot=\"{ invalid }\"\n        >\n        <form @submit.prevent=\"submit\">\n          <validation-provider\n              name=\"UserName\"\n              rules=\"required|max:10\"\n          >\n            <v-text-field\n                v-model=\"username\"\n                label=\"User Name\"\n                required\n            ></v-text-field>\n          </validation-provider>\n          <validation-provider\n              name=\"Password\"\n          >\n            <v-text-field\n                v-model=\"password\"\n                label=\"Password\"\n                required\n            ></v-text-field>\n          </validation-provider>\n\n          <v-btn\n              class=\"mr-4\"\n              type=\"submit\"\n              width=\"100%\"\n          >\n            Login\n          </v-btn>\n        </form>\n        </validation-observer>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\n\nimport { required, digits, email, max, regex } from 'vee-validate/dist/rules'\nimport { extend, ValidationObserver, ValidationProvider, setInteractionMode } from 'vee-validate'\n\nsetInteractionMode('eager')\n\nextend('required', {\n  ...required,\n  message: '{_field_} can not be empty',\n})\n\nexport default {\n  components: {\n    ValidationProvider,\n    ValidationObserver,\n  },\n  data: () => ({\n    username: '',\n    password: '',\n\n  }),\n\n  methods: {\n\n\n    setUserTokenAndId(){\n      let userData = {\n        bearerToken: this.$store.state.bearerToken,\n        userId: this.$store.state.userId,\n        name: this.$store.state.name,\n      }\n      axios.post('/api/users/setTokenAndId/',userData\n      ).then(function (response){\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    setClusterTokenAndId(){\n      let userData = {\n        bearerToken: this.$store.state.bearerToken,\n        userId: this.$store.state.userId,\n        name: this.$store.state.name,\n      }\n      axios.post('/api/clusters/setTokenAndId/',userData\n      ).then(function (response){\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    setLoginTokenAndId(){\n      let userData = {\n        bearerToken: this.$store.state.bearerToken,\n        userId: this.$store.state.userId,\n        name: this.$store.state.name,\n      }\n      axios.post('/api/login/setTokenAndId/',userData\n      ).then(function (response){\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    submit (res) {\n      let _self = this\n      // this.$refs.observer.validate()\n      console.log(res);\n      console.log(res.target[0].value);\n      console.log(res.target[1].value);\n      let data = {\n        username: res.target[0].value,\n        password: res.target[1].value,\n      }\n      axios.post('/api/users/loginUser',data\n      ).then(function (response){\n        console.log(response);\n        console.log(response.data.token);\n        console.log(response.data.userId);\n        console.log(response.data.name);\n\n        _self.$store.commit('SET_TOKEN', response.data.token)\n        _self.$store.commit('SET_USERID', response.data.userId)\n        _self.$store.commit('SET_NAME', response.data.name)\n\n\n        let today = new Date()\n        let loginTime = today.getTime()\n        console.log('time: ' + today.getTime())\n\n        _self.$store.commit('SET_TIME', loginTime)\n\n        console.log(_self.$store.state.bearerToken)\n        console.log(_self.$store.state.userId)\n        console.log(_self.$store.state.name)\n\n        _self.setUserTokenAndId()\n        _self.setClusterTokenAndId()\n        _self.setLoginTokenAndId()\n\n        _self.$router.push('/')\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    clear () {\n      this.username = ''\n      this.password = ''\n      this.$refs.observer.reset()\n    },\n  },\n}\n\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"]}]}