{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/components/base/ItemGroup.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/components/base/ItemGroup.vue","mtime":1609294420226},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnYtbGlzdC1ncm91cF9fYWN0aXZhdG9yIHAgewogIG1hcmdpbi1ib3R0b206IDA7Cn0K"},{"version":3,"sources":["ItemGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA","file":"ItemGroup.vue","sourceRoot":"src/components/base","sourcesContent":["<template>\n  <v-list-group\n    :group=\"group\"\n    :prepend-icon=\"item.icon\"\n    :sub-group=\"subGroup\"\n    append-icon=\"mdi-menu-down\"\n    :color=\"barColor !== 'rgba(255, 255, 255, 1), rgba(255, 255, 255, 0.7)' ? 'white' : 'grey darken-1'\"\n  >\n    <template v-slot:activator>\n      <v-list-item-icon\n        v-if=\"text\"\n        class=\"v-list-item__icon--text\"\n        v-text=\"computedText\"\n      />\n\n      <v-list-item-avatar\n        v-else-if=\"item.avatar\"\n        class=\"align-self-center\"\n        color=\"white\"\n        contain\n      >\n        <v-img src=\"https://demos.creative-tim.com/vuetify-material-dashboard/favicon.ico\" />\n      </v-list-item-avatar>\n\n      <v-list-item-content>\n        <v-list-item-title v-text=\"item.title\" />\n      </v-list-item-content>\n    </template>\n\n    <template v-for=\"(child, i) in children\">\n      <base-item-sub-group\n        v-if=\"child.children\"\n        :key=\"`sub-group-${i}`\"\n        :item=\"child\"\n      />\n\n      <base-item\n        v-else\n        :key=\"`item-${i}`\"\n        :item=\"child\"\n        text\n      />\n    </template>\n  </v-list-group>\n</template>\n\n<script>\n  // Utilities\n  import kebabCase from 'lodash/kebabCase'\n  import { mapState } from 'vuex'\n\n  export default {\n    name: 'ItemGroup',\n\n    inheritAttrs: false,\n\n    props: {\n      item: {\n        type: Object,\n        default: () => ({\n          avatar: undefined,\n          group: undefined,\n          title: undefined,\n          children: [],\n        }),\n      },\n      subGroup: {\n        type: Boolean,\n        default: false,\n      },\n      text: {\n        type: Boolean,\n        default: false,\n      },\n    },\n\n    computed: {\n      ...mapState(['barColor']),\n      children () {\n        return this.item.children.map(item => ({\n          ...item,\n          to: !item.to ? undefined : `${this.item.group}/${item.to}`,\n        }))\n      },\n      computedText () {\n        if (!this.item || !this.item.title) return ''\n\n        let text = ''\n\n        this.item.title.split(' ').forEach(val => {\n          text += val.substring(0, 1)\n        })\n\n        return text\n      },\n      group () {\n        return this.genGroup(this.item.children)\n      },\n    },\n\n    methods: {\n      genGroup (children) {\n        return children\n          .filter(item => item.to)\n          .map(item => {\n            const parent = item.group || this.item.group\n            let group = `${parent}/${kebabCase(item.to)}`\n\n            if (item.children) {\n              group = `${group}|${this.genGroup(item.children)}`\n            }\n\n            return group\n          }).join('|')\n      },\n    },\n  }\n</script>\n\n<style>\n.v-list-group__activator p {\n  margin-bottom: 0;\n}\n</style>\n"]}]}