{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue","mtime":1608177141987},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cluster.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"Cluster.vue","sourceRoot":"src/views/dashboard/pages","sourcesContent":["<template>\n  <v-container\n    id=\"user-profile\"\n    fluid\n    tag=\"section\"\n  >\n    <v-row justify=\"center\">\n      <v-col\n        cols=\"12\"\n        md=\"10\"\n      >\n          <v-data-table\n              :headers=\"headers\"\n              :items=\"information\"\n              :items-per-page=\"10\"\n              class=\"elevation-1\"\n          >\n            <template v-slot:top>\n                <v-divider\n                    class=\"mx-4\"\n                    inset\n                    vertical\n                ></v-divider>\n                <v-spacer></v-spacer>\n                <v-dialog\n                    v-model=\"dialog\"\n                    max-width=\"500px\"\n                >\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-row>\n                      <v-col></v-col>\n                      <v-col></v-col>\n                      <v-col></v-col>\n                      <v-col>\n                        <v-btn\n                            color=\"primary\"\n                            dark\n                            class=\"mb-2\"\n                            v-bind=\"attrs\"\n                            v-on=\"on\"\n                        >\n                          New Cluster\n                        </v-btn>\n                      </v-col>\n                    </v-row>\n\n                  </template>\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ formTitle }}</span>\n                    </v-card-title>\n\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col\n                              cols=\"12\"\n                              sm=\"6\"\n                              md=\"4\"\n                          >\n                            <v-text-field\n                                v-model=\"editedItem.name\"\n                                label=\"Cluster name\"\n                            ></v-text-field>\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"save\"\n                      >\n                        Save\n                      </v-btn>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"close\"\n                      >\n                        Cancel\n                      </v-btn>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n                <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n                  <v-card>\n                    <v-card-title class=\"headline\">Are you sure you want to <br>delete this cluster?</v-card-title>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">Cancel</v-btn>\n                      <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\">OK</v-btn>\n                      <v-spacer></v-spacer>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n            </template>\n            <template v-slot:item.actions=\"{ item }\">\n              <v-icon\n                  small\n                  class=\"mr-2\"\n                  @click=\"editItem(item)\"\n              >\n                mdi-pencil\n              </v-icon>\n              <v-icon\n                  small\n                  @click=\"deleteItem(item)\"\n              >\n                mdi-delete\n              </v-icon>\n            </template>\n<!--            <template v-slot:no-data>-->\n<!--              <v-btn-->\n<!--                  color=\"primary\"-->\n<!--                  @click=\"initialize\"-->\n<!--              >-->\n<!--                Reset-->\n<!--              </v-btn>-->\n<!--            </template>-->\n          </v-data-table>\n<!--          <v-btn color=\"primary\" @click=\"cluster_Delete()\">Delete</v-btn>-->\n\n\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\nconst Vue = require('vue');\nvar item_id;\nvar create_name;\n\nexport default {\n  name: \"Clusters\",\n  // data: function (){\n  //   return{\n  //     list:['a','b'],\n  //   };\n  // }\n  methods:{\n    editItem (item) {\n      this.editedIndex = this.information.indexOf(item)\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n\n    deleteItem (item) {\n      if(item.name != 'local') {\n        console.log(item.id)\n        item_id = item.id\n        this.editedIndex = this.information.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialogDelete = true\n      }\n    },\n\n    deleteItemConfirm () {\n      this.information.splice(this.editedIndex, 1)\n      this.closeDelete()\n      this.cluster_Delete(item_id);\n    },\n\n    close () {\n      this.dialog = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    closeDelete () {\n      this.dialogDelete = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    save () {\n      if (this.editedIndex > -1) {\n        Object.assign(this.information[this.editedIndex], this.editedItem)\n      } else {\n        // this.information.push(this.editedItem)\n        this.cluster_Create(this.editedItem.name)\n      }\n      this.close()\n    },\n    cluster_Delete(id){\n      let _self = this;\n      console.log('delete');\n      axios.get('/api/clusters/delete/'+id,{\n      }).then(function (response){\n        const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n        const timer = async () => {\n          await _sleep(1000);\n          console.log('First');\n          _self.cluster_Get()\n          // await _sleep(1000);\n          // console.log('Second');\n        };\n        timer();\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_Create(name){\n      let _self = this;\n      console.log('delete');\n      axios.get('/api/clusters/create/'+name,{\n      }).then(function (response){\n        const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n\n        const timer = async () => {\n          await _sleep(1000);\n          console.log('First');\n\n          _self.cluster_Get()\n          // await _sleep(1000);\n          // console.log('Second');\n        };\n        timer();\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_Get(){\n      let _self = this;\n      axios.get('/api/clusters',{\n      }).then(function (response){\n\n        let jsonStr = JSON.stringify(response.data);\n        let json = JSON.parse(jsonStr);\n\n        _self.information = json;\n        for (let obj of _self.information) {\n          console.log(obj);\n        }\n        console.log(_self.information);\n        // json_list = json;\n        // for(var i=0;i<json.length;i++){\n        //   console.log(json[i].memory);\n        // };\n\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n  }, // end of methods\n\n  data () {\n    return{\n      dialog: false,\n      dialogDelete: false,\n      headers: [\n        { text: 'State', value: 'state'},\n        { text: 'Cluster Name', value: 'name' },\n        { text: 'Provider', value: 'provider' },\n        { text: 'Nodes', value: 'nodeCount' },\n        { text: 'CPU', value: 'cpuList'},\n        { text: 'RAM', value: 'memoryList'},\n        { text: 'Actions', value: 'actions', sortable: false },\n      ],\n      information: [\n      ],\n      editedIndex: -1,\n      editedItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        id: '',\n      },\n      defaultItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        id: '',\n      },\n    }\n  }, // end of data\n  computed: {\n    formTitle () {\n      return this.editedIndex === -1 ? 'Create Cluster' : 'Edit Cluster Info'\n    },\n  },\n  created(){\n    var _self = this;\n\n    console.log(this.$store.state.bearerToken)\n    console.log(this.$store.state.userId)\n\n    // if('' == this.$store.state.bearerToken || '' == this.$store.state.userId){\n    //   this.$router.push('/login')\n    //   return;\n    // }\n\n    axios.get('/api/clusters',{\n    }).then(function (response){\n\n      var jsonStr = JSON.stringify(response.data);\n      var json = JSON.parse(jsonStr);\n\n      let cpuList = [];\n      let memoryList = [];\n\n      _self.information = json;\n\n      for(var i=0;i<json.length;i++){\n          cpuList[i] = json[i].requested.cpu + '/' + json[i].capacity.cpu + ' cores';\n          memoryList[i] = json[i].requested.memory + '/' + json[i].capacity.memory;\n        _self.information[i].cpuList = cpuList[i];\n        _self.information[i].memoryList = memoryList[i];\n      }\n\n      console.log('cluseter : ' + _self.$store.state.bearerToken)\n      // console.log(_self.information);\n      // for (var obj of _self.information) {\n      //   console.log(obj);\n      // }\n      // json_list = json;\n      // for(var i=0;i<json.length;i++){\n      //   console.log(json[i].memory);\n      // };\n\n\n    }).catch(function (error){\n      console.log(error);\n    }).finally(function (){\n\n    });\n  }, // end of created\n}\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"]}]}