{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Node.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Node.vue","mtime":1611037129329},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Node.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"Node.vue","sourceRoot":"src/views/dashboard/pages","sourcesContent":["<template>\n  <v-container\n    id=\"node\"\n    fluid\n    tag=\"section\"\n  >\n    <div style=\"position: relative; width: 100%; height: 60px;\">\n      <v-btn\n          color=\"primary\"\n          dark\n          class=\"mb-2\"\n          @click=\"createNodeShow\"\n          style=\"position: absolute; right: 4.5%;\">\n\n        노드 추가\n      </v-btn>\n    </div>\n\n    <v-data-table\n        :headers=\"headers\"\n        :items=\"information\"\n        :items-per-page=\"10\"\n        class=\"elevation-1\"\n    >\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon\n            small\n            class=\"mr-2\"\n            @click=\"nodeModifyShow(item)\"\n        >\n          mdi-pencil\n        </v-icon>\n        <v-icon\n            small\n            @click=\"nodeDeleteShow\"\n        >\n          mdi-delete\n        </v-icon>\n\n        <v-dialog v-model=\"createNodeDialog\" @close=\"createNodeDialogClose\" max-width=\"700px\">\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\">노드 추가</span>\n            </v-card-title>\n\n            <div style=\"margin-left:5%; margin-right:5%; \">\n              <div style=\"text-align: center;\">\n                <v-checkbox v-model=\"etcd\" @change=\"checkRole\" label=\"etcd\" style=\"display: inline-block;\"></v-checkbox>\n                <v-checkbox v-model=\"controlPlane\" @change=\"checkRole\" label=\"controlPlane\" style=\"display: inline-block; margin-left: 10%;\"></v-checkbox>\n                <v-checkbox v-model=\"worker\" @change=\"checkRole\" label=\"worker\" style=\"display: inline-block; margin-left: 10%;\"></v-checkbox>\n              </div>\n              <span>이미 실행중인 하나 이상의 기존 머신에서 이 Docker 명령을 실행하세요.<br><br></span>\n              <span>{{ nodeCommand+nodeCommandRole }}</span>\n            </div>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"createNodeDialogClose\"\n              >\n                취소\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n\n        </v-dialog>\n\n\n        <v-dialog\n            v-model=\"modifyDialog\"\n            max-width=\"600px\"\n        >\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\"> 노드 수정 </span>\n            </v-card-title>\n\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-col\n                      cols=\"12\"\n                      sm=\"6\"\n                      md=\"4\"\n                  >\n                    <v-text-field\n                        v-model=\"editTable.name\"\n                        label=\"노드 이름\"\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-card-text>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"modifyNodeName\"\n              >\n                저장\n              </v-btn>\n              <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"closeModify\"\n              >\n                취소\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n        <v-dialog v-model=\"deleteDialog\" max-width=\"500px\">\n          <v-card>\n            <v-card-title class=\"headline\">노드를 삭제하시겠습니까?</v-card-title>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" text @click=\"deleteNode(item)\">삭제</v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">취소</v-btn>\n              <v-spacer></v-spacer>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </template>\n    </v-data-table>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\nconst Vue = require('vue');\nvar json_list;\n\nexport default {\n  name: \"Projects\",\n  // data: function (){\n  //   return{\n  //     list:['a','b'],\n  //   };\n  // }\n  data () {\n    return {\n      modifyDialog: false,\n      deleteDialog: false,\n      createNodeDialog: false,\n      createNode: true,\n      etcd: false,\n      controlPlane: false,\n      worker: false,\n      resData: '',\n      nodeCommand: '',\n      nodeCommandRole: '',\n      headers: [\n        { text: '상태', value: 'state'},\n        { text: '노드 이름', value: 'newNodeName' },\n        { text: '역할', value: 'role' },\n        { text: '버전', value: 'info.kubernetes.kubeletVersion' },\n        { text: 'CPU', value: 'cpu'},\n        { text: '메모리', value: 'memory'},\n        { text: '파드', value: 'pods' },\n        { text: '수정/삭제', value: 'actions', sortable: false}\n      ],\n      information: [\n      ],\n      editTable:{\n        name: '',\n        id: '',\n      },\n    }\n  },\n  methods:{\n    createNodeDialogClose(){\n      this.createNodeDialog = false\n      this.etcd = false\n      this.controlPlane = false\n      this.worker = false\n    },\n    checkRole(){\n      this.nodeCommandRole = ''\n\n      if(this.etcd){\n        this.nodeCommandRole += ' --etcd'\n      }\n      if(this.controlPlane){\n        this.nodeCommandRole += ' --controlplane'\n      }\n      if(this.worker){\n        this.nodeCommandRole += ' --worker'\n      }\n    },\n    createNodeShow(){\n      this.checkRole()\n      console.log(this.createNodeDialog)\n      this.getClusterToken()\n      this.createNodeDialog = true\n      console.log(this.createNodeDialog)\n    },\n    getClusterToken(){\n      let _self = this\n\n      let nodeData = {\n        id: _self.$store.state.clusterDetailInfo.id,\n      }\n      console.log(nodeData)\n\n      axios.post('/api/nodes/getClusterToken',nodeData\n      ).then(function (response){\n        console.log(response.data)\n        _self.resData = response.data[0]\n\n        _self.nodeCommand = _self.resData.nodeCommand\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    nodeModifyShow(item){\n      this.modifyDialog = true\n      this.editTable.name = item.newNodeName\n      this.editTable.id = item.id\n    },\n    nodeDeleteShow(){\n      this.deleteDialog = true\n    },\n    deleteNode(item){\n      console.log(item)\n      let _self = this;\n      _self.deleteDialog = false\n      _self.$store.commit('SET_LOADING', true)\n\n      let nodeData = {\n        id: item.id,\n      }\n\n      axios.post('/api/nodes/delete',nodeData\n      ).then(function (response){\n        _self.$store.commit('SET_LOADING', false)\n        _self.$store.commit('SET_ALERT_TYPE', 'success')\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '노드 삭제 완료')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    closeDelete(){\n      this.deleteDialog = false\n    },\n    closeModify(){\n      this.modifyDialog = false\n    },\n\n    modifyNodeName(){\n      let _self = this\n      _self.modifyDialog = false\n      _self.$store.commit('SET_LOADING', true)\n\n      let nodeData = {\n        id: _self.editTable.id,\n        name: _self.editTable.name,\n      }\n      console.log(nodeData)\n\n      axios.post('/api/nodes/modifyNodeName',nodeData\n      ).then(function (response){\n\n        _self.node_Get()\n        _self.$store.commit('SET_LOADING', false)\n        _self.$store.commit('SET_ALERT_TYPE', 'success')\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '노드 이름 수정 완료')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    node_Get(){\n      let _self = this\n\n      axios.get('/api/nodes/'+_self.$store.state.clusterDetailInfo.id,{\n      }).then(function (response){\n\n        let jsonStr = JSON.stringify(response.data);\n        let json = JSON.parse(jsonStr);\n\n        _self.information = json;\n\n        for(let i=0;i<_self.information.length;i++){\n          if(_self.information[i].name=='' || _self.information[i].name==undefined){\n            console.log(_self.information)\n            console.log(_self.information.nodeName)\n            _self.information[i].newNodeName = _self.information[i].nodeName\n          }else{\n            _self.information[i].newNodeName = _self.information[i].name\n          }\n        }\n\n        console.log(_self.information)\n\n        for(let i=0;i<json.length;i++){\n          let role = ''\n          if(json[i].etcd || json[i].controlPlane || json[i].worker)\n          {\n            if(json[i].etcd){role += ',etcd'}\n            if(json[i].controlPlane){role += ',controlPlane'}\n            if(json[i].worker){role += ',worker'}\n            role = role.substring(1,role.length)\n            console.log(role)\n          }\n          _self.information[i].role = role\n\n          let cpu = json[i].requested.cpu + '/' + json[i].capacity.cpu\n          let memory = json[i].requested.memory + '/' + json[i].capacity.memory\n          let pods = json[i].requested.pods + '/' + json[i].capacity.pods\n          console.log('cpu >>>>> '+cpu)\n          if(cpu == undefined || cpu == '' || cpu == '0'){\n            return\n          }\n\n          _self.information[i].cpu = cpu\n          _self.information[i].memory = memory\n          _self.information[i].pods = pods\n\n        }\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n  },\n  created(){\n    let _self = this\n\n    if(_self.$store.state.nodeTimer == '') {\n      _self.$store.commit('SET_NODE_TIMER', setInterval(function () {\n        _self.node_Get()\n      }, 5000))\n    }\n\n    _self.$store.commit('SET_LOADING', true)\n    axios.get('/api/nodes/'+_self.$store.state.clusterDetailInfo.id,{\n    }).then(function (response){\n\n      let jsonStr = JSON.stringify(response.data);\n      let json = JSON.parse(jsonStr);\n\n      _self.information = json;\n      for(let i=0;i<_self.information.length;i++){\n        if(_self.information[i].name=='' || _self.information[i].name==undefined){\n          _self.information[i].newNodeName = _self.information[i].nodeName\n        }else{\n          _self.information[i].newNodeName = _self.information[i].name\n        }\n      }\n      console.log(_self.information)\n\n      for(let i=0;i<json.length;i++){\n        let role = ''\n        if(json[i].etcd || json[i].controlPlane || json[i].worker)\n        {\n          if(json[i].etcd){role += ',etcd'}\n          if(json[i].controlPlane){role += ',controlPlane'}\n          if(json[i].worker){role += ',worker'}\n          role = role.substring(1,role.length)\n          console.log(role)\n        }\n        _self.information[i].role = role\n\n        let cpu = json[i].requested.cpu + '/' + json[i].capacity.cpu\n        let memory = json[i].requested.memory + '/' + json[i].capacity.memory\n        let pods = json[i].requested.pods + '/' + json[i].capacity.pods\n\n        _self.information[i].cpu = cpu\n        _self.information[i].memory = memory\n        _self.information[i].pods = pods\n\n      }\n\n\n\n      _self.$store.commit('SET_LOADING', false)\n\n    }).catch(function (error){\n      console.log(error);\n    }).finally(function (){\n\n    });\n\n    // this.clusterDetailInfo = this.$store.state.clusterDetailInfo\n    // if(this.clusterDetailInfo.appliedSpec.rancherKubernetesEngineConfig != null){\n    //   this.clusterDetailInfo.hostnameOverride = this.clusterDetailInfo.appliedSpec.rancherKubernetesEngineConfig.nodes[0].hostnameOverride\n    //   this.clusterDetailInfo.role = this.clusterDetailInfo.appliedSpec.rancherKubernetesEngineConfig.nodes[0].role\n    // }else{\n    //   this.clusterDetailInfo.hostname = this.clusterDetailInfo.id\n    //   this.clusterDetailInfo.role = 'controlplane'\n    // }\n    // this.information.push(this.clusterDetailInfo)\n  },\n}\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"]}]}