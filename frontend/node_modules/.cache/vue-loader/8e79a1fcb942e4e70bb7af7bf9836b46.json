{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue","mtime":1607501338886},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAvLwp9Cgpjb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7Cgpjb25zdCBnZXRQcm9qZWN0ID0gYXN5bmMgKCkgPT4gewogIHRyeSB7CiAgICBjb25zb2xlLmxvZygnZ2cnKTsKICAgIHJldHVybiBhd2FpdCBheGlvcy5nZXQoJy9hcGkvY2x1c3RlcicpOwogIH1jYXRjaChlcnJvcil7CiAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgIGNvbnNvbGUubG9nKCdlcnJvcicpOwogIH0KfTsKCmNvbnN0IHByb2plY3RMaXN0ID0gYXN5bmMgKCkgPT4gewogIGNvbnN0IHByb2plY3QgPSBhd2FpdCBnZXRQcm9qZWN0KCk7CiAgY29uc29sZS5sb2cocHJvamVjdCk7CiAgaWYocHJvamVjdC5kYXRhLm1lc3NhZ2UpewogICAgY29uc29sZS5sb2coJycpOwogIH0KfTsK"},{"version":3,"sources":["Cluster.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Cluster.vue","sourceRoot":"src/views/dashboard/pages","sourcesContent":["<template>\n  <v-container\n    id=\"user-profile\"\n    fluid\n    tag=\"section\"\n  >\n    <v-row justify=\"center\">\n      <v-col\n        cols=\"12\"\n        md=\"10\"\n      >\n        <v-layout style=\"height: 30px;\">\n          <v-flex>\n            <v-checkbox style=\"display: inline;\"></v-checkbox>\n          </v-flex>\n          <v-flex md1>\n            State\n          </v-flex>\n          <v-flex md7>\n            Cluster Name\n          </v-flex>\n          <v-flex md1>\n            Provider\n          </v-flex>\n          <v-flex md1>\n            Nodes\n          </v-flex>\n          <v-flex md1>\n            CPU\n          </v-flex>\n          <v-flex md1>\n            RAM\n          </v-flex>\n        </v-layout>\n        <hr style=\"border:solid 1px\">\n        <v-layout style=\"margin-top:10px; height: 30px;\" v-for=\"i in 5\">\n          <v-flex>\n            <v-checkbox style=\"display: inline;\" >\n            </v-checkbox>\n          </v-flex>\n          <v-flex md1>\n            State\n          </v-flex>\n          <v-flex md7>\n            Cluster Name\n          </v-flex>\n          <v-flex md1>\n            Provider\n          </v-flex>\n          <v-flex md1>\n            Nodes\n          </v-flex>\n          <v-flex md1>\n            CPU\n          </v-flex>\n          <v-flex md1>\n            RAM\n          </v-flex>\n        </v-layout>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  export default {\n    //\n  }\n\n  const axios = require('axios');\n\n  const getProject = async () => {\n    try {\n      console.log('gg');\n      return await axios.get('/api/cluster');\n    }catch(error){\n      console.error(error);\n      console.log('error');\n    }\n  };\n\n  const projectList = async () => {\n    const project = await getProject();\n    console.log(project);\n    if(project.data.message){\n      console.log('');\n    }\n  };\n</script>\n"]}]}