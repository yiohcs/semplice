{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Cluster.vue","mtime":1611123066862},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTsKY29uc3QgVnVlID0gcmVxdWlyZSgndnVlJyk7CmltcG9ydCBkcmF3ZXIgZnJvbSAiLi4vY29tcG9uZW50cy9jb3JlL0RyYXdlciI7CgoKCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNsdXN0ZXJzIiwKICAvLyBkYXRhOiBmdW5jdGlvbiAoKXsKICAvLyAgIHJldHVybnsKICAvLyAgICAgbGlzdDpbJ2EnLCdiJ10sCiAgLy8gICB9OwogIC8vIH0KICBtZXRob2RzOnsKICAgIG1vZGlmeUNsdXN0ZXJOYW1lKCl7CiAgICAgIGxldCBfc2VsZiA9IHRoaXM7CgogICAgICBpZih0aGlzLmVkaXRlZEl0ZW0ubmFtZSA9PSAnJyB8fCB0aGlzLmVkaXRlZEl0ZW0ubmFtZSA9PSB1bmRlZmluZWQpewogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIF9zZWxmLmRpYWxvZyA9IGZhbHNlCiAgICAgIF9zZWxmLiRzdG9yZS5jb21taXQoJ1NFVF9MT0FESU5HJywgdHJ1ZSkKICAgICAgY29uc29sZS5sb2coJ21vZGlmeScpOwogICAgICBsZXQgY2x1c3RlckRhdGEgPSB7CiAgICAgICAgbmFtZTogX3NlbGYuZWRpdGVkSXRlbS5uYW1lLAogICAgICAgIGlkOiBfc2VsZi5lZGl0ZWRJdGVtLmlkCiAgICAgIH0KICAgICAgYXhpb3MucG9zdCgnL2FwaS9jbHVzdGVycy9tb2RpZnlDbHVzdGVyTmFtZScsY2x1c3RlckRhdGEKICAgICAgKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSl7CiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSkKCiAgICAgICAgX3NlbGYuY2x1c3Rlcl9HZXQoKQogICAgICAgIF9zZWxmLiRzdG9yZS5jb21taXQoJ1NFVF9MT0FESU5HJywgZmFsc2UpCiAgICAgICAgX3NlbGYuJHN0b3JlLmNvbW1pdCgnU0VUX0FMRVJUX1RZUEUnLCAnc3VjY2VzcycpCiAgICAgICAgX3NlbGYuJHN0b3JlLmNvbW1pdCgnU0VUX0VSUk9SX0NIRUNLJywgdHJ1ZSkKICAgICAgICBfc2VsZi4kc3RvcmUuY29tbWl0KCdTRVRfQUxFUlRfVEVYVCcsICftgbTrn6zsiqTthLAg7J2066aEIOyImOyglSDsmYTro4wnKQoKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpewogICAgICAgICAgX3NlbGYuJHN0b3JlLmNvbW1pdCgnU0VUX0VSUk9SX0NIRUNLJywgZmFsc2UpCiAgICAgICAgfSwzMDAwKQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSkuZmluYWxseShmdW5jdGlvbiAoKXsKCiAgICAgIH0pOwogICAgfSwKICAgIGNoZWNrUm9sZSgpewogICAgICB0aGlzLm5vZGVDb21tYW5kUm9sZSA9ICcnCgogICAgICBpZih0aGlzLmV0Y2QpewogICAgICAgIHRoaXMubm9kZUNvbW1hbmRSb2xlICs9ICcgLS1ldGNkJwogICAgICB9CiAgICAgIGlmKHRoaXMuY29udHJvbFBsYW5lKXsKICAgICAgICB0aGlzLm5vZGVDb21tYW5kUm9sZSArPSAnIC0tY29udHJvbHBsYW5lJwogICAgICB9CiAgICAgIGlmKHRoaXMud29ya2VyKXsKICAgICAgICB0aGlzLm5vZGVDb21tYW5kUm9sZSArPSAnIC0td29ya2VyJwogICAgICB9CgogICAgfSwKICAgIGVkaXRJdGVtIChpdGVtKSB7CiAgICAgIHRoaXMuZWRpdGVkSW5kZXggPSB0aGlzLmluZm9ybWF0aW9uLmluZGV4T2YoaXRlbSkKICAgICAgdGhpcy5lZGl0ZWRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSkKICAgICAgdGhpcy5kaWFsb2cgPSB0cnVlCiAgICB9LAoKICAgIGNyZWF0ZUNsdXN0ZXIgKGl0ZW0pIHsKICAgICAgdGhpcy5uZXdDbHVzdGVyID0gLTEKICAgICAgdGhpcy5zaG93VG9rZW5Db21tYW5kID0gZmFsc2UKICAgICAgdGhpcy5lZGl0ZWRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSkKICAgICAgdGhpcy5kaWFsb2dDcmVhdGUgPSB0cnVlCiAgICAgIHRoaXMuY3JlYXRlQnRuU2hvdyA9IHRydWUKICAgIH0sCgogICAgaW1wb3J0Q2x1c3RlciAoaXRlbSkgewogICAgICB0aGlzLm5ld0NsdXN0ZXIgPSAxCiAgICAgIHRoaXMuc2hvd1Rva2VuQ29tbWFuZCA9IGZhbHNlCiAgICAgIHRoaXMuZWRpdGVkSXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIGl0ZW0pCiAgICAgIHRoaXMuZGlhbG9nQ3JlYXRlID0gdHJ1ZQogICAgICB0aGlzLmNyZWF0ZUJ0blNob3cgPSB0cnVlCiAgICB9LAoKICAgIGNsdXN0ZXJDcmVhdGVJbXBvcnQgKGl0ZW0pIHsKICAgICAgT2JqZWN0LmFzc2lnbih7fSwgaXRlbSkKICAgICAgY29uc29sZS5sb2codGhpcy5lZGl0ZWRJdGVtLm5hbWUpCiAgICAgIC8vIGxldCBzaG93VG9rZW5Db21tYW5kID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Nob3dUb2tlbkNvbW1hbmQnKQogICAgICAvLyBzaG93VG9rZW5Db21tYW5kLnN0eWxlLnZpc2liaWxpdHkgPSAndmlzaWJsZScKCiAgICAgIGlmKHRoaXMuZWRpdGVkSXRlbS5uYW1lID09ICcnIHx8IHRoaXMuZWRpdGVkSXRlbS5uYW1lID09IHVuZGVmaW5lZCApewogICAgICAgIHJldHVybgogICAgICB9CgogICAgICB0aGlzLmNsdXN0ZXJfQ3JlYXRlKHRoaXMuZWRpdGVkSXRlbS5uYW1lKQoKCiAgICAgIC8vIGF3YWl0IF9zbGVlcCgxMDAwKTsKICAgICAgLy8gY29uc29sZS5sb2coJ1NlY29uZCcpOwoKICAgICAgLy8gdGhpcy5jbG9zZSgpCiAgICB9LAoKICAgIGRlbGV0ZUl0ZW0gKGl0ZW0pIHsKICAgICAgaWYoaXRlbS5uYW1lICE9ICdsb2NhbCcpIHsKICAgICAgICBjb25zb2xlLmxvZyhpdGVtLmlkKQogICAgICAgIHRoaXMuaXRlbV9pZCA9IGl0ZW0uaWQKICAgICAgICB0aGlzLmVkaXRlZEluZGV4ID0gdGhpcy5pbmZvcm1hdGlvbi5pbmRleE9mKGl0ZW0pCiAgICAgICAgdGhpcy5lZGl0ZWRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSkKICAgICAgICB0aGlzLmRpYWxvZ0RlbGV0ZSA9IHRydWUKICAgICAgfQogICAgfSwKCiAgICBkZWxldGVJdGVtQ29uZmlybSAoKSB7CiAgICAgIHRoaXMuaW5mb3JtYXRpb24uc3BsaWNlKHRoaXMuZWRpdGVkSW5kZXgsIDEpCiAgICAgIHRoaXMuY2xvc2VEZWxldGUoKQogICAgICB0aGlzLmNsdXN0ZXJfRGVsZXRlKHRoaXMuaXRlbV9pZCk7CiAgICB9LAoKICAgIGRpYWxvZ0NyZWF0ZUNsb3NlKCl7CiAgICAgIHRoaXMuZGlhbG9nQ3JlYXRlID0gZmFsc2UKICAgICAgdGhpcy5jbHVzdGVyX0dldCgpCiAgICB9LAoKICAgIGNsb3NlICgpIHsKICAgICAgdGhpcy5kaWFsb2cgPSBmYWxzZQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5lZGl0ZWRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5kZWZhdWx0SXRlbSkKICAgICAgICB0aGlzLmVkaXRlZEluZGV4ID0gLTEKICAgICAgfSkKICAgIH0sCgogICAgY2xvc2VEZWxldGUgKCkgewogICAgICB0aGlzLmRpYWxvZ0RlbGV0ZSA9IGZhbHNlCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLmVkaXRlZEl0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmRlZmF1bHRJdGVtKQogICAgICAgIHRoaXMuZWRpdGVkSW5kZXggPSAtMQogICAgICB9KQogICAgfSwKCiAgICBzYXZlICgpIHsKICAgICAgaWYodGhpcy5lZGl0ZWRJdGVtLm5hbWUgPT0gJycpewogICAgICAgIHJldHVybgogICAgICB9CgogICAgICBpZiAodGhpcy5lZGl0ZWRJbmRleCA+IC0xKSB7CiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLmluZm9ybWF0aW9uW3RoaXMuZWRpdGVkSW5kZXhdLCB0aGlzLmVkaXRlZEl0ZW0pCiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gdGhpcy5pbmZvcm1hdGlvbi5wdXNoKHRoaXMuZWRpdGVkSXRlbSkKICAgICAgICB0aGlzLmNsdXN0ZXJfQ3JlYXRlKHRoaXMuZWRpdGVkSXRlbS5uYW1lKQogICAgICB9CiAgICAgIHRoaXMuY2xvc2UoKQogICAgfSwKCiAgICBjbHVzdGVyX0RlbGV0ZShpZCl7CiAgICAgIGxldCBfc2VsZiA9IHRoaXM7CiAgICAgIGNvbnNvbGUubG9nKCdkZWxldGUnKTsKICAgICAgYXhpb3MuZ2V0KCcvYXBpL2NsdXN0ZXJzL2RlbGV0ZS8nK2lkLHsKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpewoKICAgICAgICBfc2VsZi5jbHVzdGVyX0dldCgpCiAgICAgICAgLy8gYXdhaXQgX3NsZWVwKDEwMDApOwogICAgICAgIC8vIGNvbnNvbGUubG9nKCdTZWNvbmQnKTsKICAgICAgICBfc2VsZi4kc3RvcmUuY29tbWl0KCdTRVRfQUxFUlRfVFlQRScsICdzdWNjZXNzJykKICAgICAgICBfc2VsZi4kc3RvcmUuY29tbWl0KCdTRVRfRVJST1JfQ0hFQ0snLCB0cnVlKQogICAgICAgIF9zZWxmLiRzdG9yZS5jb21taXQoJ1NFVF9BTEVSVF9URVhUJywgJ+2BtOufrOyKpO2EsCDsgq3soJwg7JmE66OMJykKCiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKXsKICAgICAgICAgIF9zZWxmLiRzdG9yZS5jb21taXQoJ1NFVF9FUlJPUl9DSEVDSycsIGZhbHNlKQogICAgICAgIH0sMzAwMCkKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKXsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCl7CgogICAgICB9KTsKICAgIH0sCgogICAgY2x1c3Rlcl9DcmVhdGUobmFtZSl7CiAgICAgIGxldCBfc2VsZiA9IHRoaXM7CiAgICAgIF9zZWxmLiRzdG9yZS5jb21taXQoJ1NFVF9MT0FESU5HJywgdHJ1ZSkKICAgICAgY29uc29sZS5sb2coJ0NyZWF0ZScpOwogICAgICBheGlvcy5nZXQoJy9hcGkvY2x1c3RlcnMvY3JlYXRlLycrbmFtZSx7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKXsKICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKQogICAgICAgICAgX3NlbGYucmVzRGF0YSA9IHJlc3BvbnNlLmRhdGEKCiAgICAgICAgICBjb25zb2xlLmxvZygndG9rZW5EYXRhID4+Pj4gJykKICAgICAgICAgIGNvbnNvbGUubG9nKF9zZWxmLnJlc0RhdGEpCiAgICAgICAgICBpZiAoX3NlbGYubmV3Q2x1c3RlciA9PSAtMSkgewogICAgICAgICAgICBfc2VsZi5ub2RlQ29tbWFuZCA9IF9zZWxmLnJlc0RhdGEubm9kZUNvbW1hbmQKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF9zZWxmLmNvbW1hbmQgPSBfc2VsZi5yZXNEYXRhLmNvbW1hbmQKICAgICAgICAgICAgX3NlbGYuaW5zZWN1cmVDb21tYW5kID0gX3NlbGYucmVzRGF0YS5pbnNlY3VyZUNvbW1hbmQKICAgICAgICAgIH0KICAgICAgICAgIF9zZWxmLnNob3dUb2tlbkNvbW1hbmQgPSB0cnVlCiAgICAgICAgICBfc2VsZi5jcmVhdGVCdG5TaG93ID0gZmFsc2UKICAgICAgICAgIF9zZWxmLiRzdG9yZS5jb21taXQoJ1NFVF9MT0FESU5HJywgZmFsc2UpCiAgICAgICAgX3NlbGYuJHN0b3JlLmNvbW1pdCgnU0VUX0FMRVJUX1RZUEUnLCAnc3VjY2VzcycpCiAgICAgICAgX3NlbGYuJHN0b3JlLmNvbW1pdCgnU0VUX0VSUk9SX0NIRUNLJywgdHJ1ZSkKICAgICAgICBfc2VsZi4kc3RvcmUuY29tbWl0KCdTRVRfQUxFUlRfVEVYVCcsICftgbTrn6zsiqTthLAg65Ox66GdIOyZhOujjCcpCgogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCl7CiAgICAgICAgICBfc2VsZi4kc3RvcmUuY29tbWl0KCdTRVRfRVJST1JfQ0hFQ0snLCBmYWxzZSkKICAgICAgICB9LDMwMDApCgogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSkuZmluYWxseShmdW5jdGlvbiAoKXsKCiAgICAgIH0pOwogICAgfSwKCiAgICAvLyBjbHVzdGVyX0NyZWF0ZShuYW1lKXsKICAgIC8vICAgbGV0IF9zZWxmID0gdGhpczsKICAgIC8vICAgbGV0IHJldHVyblRva2VuCiAgICAvLyAgIGNvbnNvbGUubG9nKCdDcmVhdGUnKTsKICAgIC8vICAgYXhpb3MuZ2V0KCcvYXBpL2NsdXN0ZXJzL2NyZWF0ZS8nK25hbWUsewogICAgLy8gICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSl7CiAgICAvLyAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSkKICAgIC8vCiAgICAvLyAgICAgY29uc3QgX3NsZWVwID0gKGRlbGF5KSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCBkZWxheSkpOwogICAgLy8KICAgIC8vICAgICBjb25zdCB0aW1lciA9IGFzeW5jICgpID0+IHsKICAgIC8vCiAgICAvLyAgICAgICBfc2VsZi5jbHVzdGVyX2dlbmVyYXRlVG9rZW4ocmVzcG9uc2UuZGF0YS5pZCkKICAgIC8vCiAgICAvLyAgICAgICBhd2FpdCBfc2xlZXAoMTUwMCk7CiAgICAvLyAgICAgICBjb25zb2xlLmxvZygnRmlyc3QnKTsKICAgIC8vICAgICAgIF9zZWxmLmNsdXN0ZXJfR2V0KCkKICAgIC8vCiAgICAvLyAgICAgICAvLyBhd2FpdCBfc2xlZXAoMTAwMCk7CiAgICAvLyAgICAgICAvLyBjb25zb2xlLmxvZygnU2Vjb25kJyk7CiAgICAvLyAgICAgfTsKICAgIC8vICAgICB0aW1lcigpOwogICAgLy8gICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpewogICAgLy8gICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgIC8vICAgfSkuZmluYWxseShmdW5jdGlvbiAoKXsKICAgIC8vCiAgICAvLyAgIH0pOwogICAgLy8gfSwKICAgIC8vCiAgICAvLyBjbHVzdGVyX2dlbmVyYXRlVG9rZW4obmFtZSl7CiAgICAvLyAgIGxldCBfc2VsZiA9IHRoaXM7CiAgICAvLyAgIGNvbnNvbGUubG9nKCdnZW5lcmF0ZVRva2VuJyk7CiAgICAvLyAgIGF4aW9zLmdldCgnL2FwaS9jbHVzdGVycy9nZW5lcmF0ZVRva2VuLycrbmFtZSx7CiAgICAvLyAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKXsKICAgIC8vICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKQogICAgLy8gICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEubm9kZUNvbW1hbmQpCiAgICAvLwogICAgLy8gICAgIF9zZWxmLnJlc0RhdGEgPSByZXNwb25zZS5kYXRhCiAgICAvLyAgICAgICAvLyBhd2FpdCBfc2xlZXAoMTAwMCk7CiAgICAvLyAgICAgICAvLyBjb25zb2xlLmxvZygnU2Vjb25kJyk7CiAgICAvLwogICAgLy8gICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpewogICAgLy8gICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgIC8vICAgfSkuZmluYWxseShmdW5jdGlvbiAoKXsKICAgIC8vCiAgICAvLyAgIH0pOwogICAgLy8gfSwKCiAgICBjbHVzdGVyX0dldCgpewogICAgICBsZXQgX3NlbGYgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2coJ2NsdXN0ZXJfR2V0JykKCiAgICAgIGF4aW9zLmdldCgnL2FwaS9jbHVzdGVycycsewogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSl7CgogICAgICAgIGlmKHJlc3BvbnNlLmRhdGEgPT0nJyB8fCByZXNwb25zZS5kYXRhID09IG51bGwpewogICAgICAgICAgX3NlbGYuJHN0b3JlLmNvbW1pdCgnU0VUX1RPS0VOJywgcmVzcG9uc2UuZGF0YS50b2tlbikKICAgICAgICAgIF9zZWxmLiRzdG9yZS5jb21taXQoJ1NFVF9VU0VSSUQnLCByZXNwb25zZS5kYXRhLnVzZXJJZCkKICAgICAgICAgIF9zZWxmLiRzdG9yZS5jb21taXQoJ1NFVF9OQU1FJywgcmVzcG9uc2UuZGF0YS5uYW1lKQogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQoKICAgICAgICBsZXQganNvblN0ciA9IEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmRhdGEpOwogICAgICAgIGxldCBqc29uID0gSlNPTi5wYXJzZShqc29uU3RyKTsKCiAgICAgICAgbGV0IGNwdUxpc3QgPSBbXTsKICAgICAgICBsZXQgbWVtb3J5TGlzdCA9IFtdOwoKICAgICAgICBfc2VsZi5pbmZvcm1hdGlvbiA9IGpzb247CgogICAgICAgIGZvcihsZXQgaT0wO2k8anNvbi5sZW5ndGg7aSsrKXsKICAgICAgICAgIGNwdUxpc3RbaV0gPSBqc29uW2ldLnJlcXVlc3RlZC5jcHUgKyAnLycgKyBqc29uW2ldLmNhcGFjaXR5LmNwdSArICcgY29yZXMnOwogICAgICAgICAgbWVtb3J5TGlzdFtpXSA9IGpzb25baV0ucmVxdWVzdGVkLm1lbW9yeSArICcvJyArIGpzb25baV0uY2FwYWNpdHkubWVtb3J5OwogICAgICAgICAgX3NlbGYuaW5mb3JtYXRpb25baV0uY3B1TGlzdCA9IGNwdUxpc3RbaV07CiAgICAgICAgICBfc2VsZi5pbmZvcm1hdGlvbltpXS5tZW1vcnlMaXN0ID0gbWVtb3J5TGlzdFtpXTsKICAgICAgICB9CgogICAgICAgIC8vZHJhd2VyLml0ZW1zLmNoaWxkSXRlbSA9IHRpdGxlTGlzdAoKICAgICAgICAvLyBqc29uX2xpc3QgPSBqc29uOwogICAgICAgIC8vIGZvcih2YXIgaT0wO2k8anNvbi5sZW5ndGg7aSsrKXsKICAgICAgICAvLyAgIGNvbnNvbGUubG9nKGpzb25baV0ubWVtb3J5KTsKICAgICAgICAvLyB9OwoKCiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcil7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpewoKICAgICAgfSk7CiAgICB9LAogICAgZGF0YUNsaWNrKHJvdyl7CiAgICAgIGxldCBfc2VsZiA9IHRoaXMKICAgICAgdGhpcy5pbmZvcm1hdGlvbi5tYXAoKGl0ZW0sIGluZGV4KSA9PnsKICAgICAgICBjb25zb2xlLmxvZyhyb3cpCiAgICAgICAgaXRlbS5zZWxlY3RlZCA9IGl0ZW0gPT09IHJvdwoKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9DTFVTVEVSX0RFVEFJTF9JTkZPJywgcm93KQogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0VUX0NQVScsIHJvdy5jcHVMaXN0KQogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0VUX01FTU9SWScsIHJvdy5tZW1vcnlMaXN0KQogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0VUX1BPRFMnLCByb3cucG9kc0xpc3QpCgogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0VUX0xPQURJTkcnLCB0cnVlKQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvYy8nK3Jvdy5pZCkKICAgICAgfSk7CiAgICB9LAogICAgLy8gZGF0YUNsaWNrKHJvdyl7CiAgICAvLyAgIHRoaXMuaW5mb3JtYXRpb24ubWFwKChpdGVtLCBpbmRleCkgPT57CiAgICAvLyAgICAgaXRlbS5zZWxlY3RlZCA9IGl0ZW0gPT09IHJvdwogICAgLy8KICAgIC8vICAgICBsZXQgY2x1c3RlckRldGFpbEluZm8gPSB7fQogICAgLy8gICAgIGNsdXN0ZXJEZXRhaWxJbmZvID0gcm93CiAgICAvLwogICAgLy8gICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0VUX0NMVVNURVJfREVUQUlMX0lORk8nLCBjbHVzdGVyRGV0YWlsSW5mbykKICAgIC8vICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9DUFUnLCByb3cuY3B1TGlzdCkKICAgIC8vICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9NRU1PUlknLCByb3cubWVtb3J5TGlzdCkKICAgIC8vICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9QT0RTJywgcm93LnBvZHNMaXN0KQogICAgLy8gICAgIGNvbnNvbGUubG9nKHJvdykKICAgIC8vICAgICBpZihyb3cuYXBwbGllZFNwZWMucmFuY2hlckt1YmVybmV0ZXNFbmdpbmVDb25maWcgIT0gbnVsbCkgewogICAgLy8gICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfTk9ERVMnLCByb3cuYXBwbGllZFNwZWMucmFuY2hlckt1YmVybmV0ZXNFbmdpbmVDb25maWcubm9kZXMpCiAgICAvLyAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9IT1NUTkFNRV9PVkVSUklERScsIHJvdy5hcHBsaWVkU3BlYy5yYW5jaGVyS3ViZXJuZXRlc0VuZ2luZUNvbmZpZy5ub2Rlc1swXS5ob3N0bmFtZU92ZXJyaWRlKQogICAgLy8gICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfUk9MRScsIHJvdy5hcHBsaWVkU3BlYy5yYW5jaGVyS3ViZXJuZXRlc0VuZ2luZUNvbmZpZy5ub2Rlc1swXS5yb2xlKQogICAgLy8gICAgIH1lbHNlewogICAgLy8gICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfSE9TVE5BTUVfT1ZFUlJJREUnLCByb3cuaWQpCiAgICAvLyAgICAgfQogICAgLy8gICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0VUX0dJVF9WRVJTSU9OJywgcm93LnZlcnNpb24uZ2l0VmVyc2lvbikKICAgIC8vCiAgICAvLyAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9jLycrcm93LmlkKQogICAgLy8gICB9KTsKICAgIC8vIH0sCiAgfSwgLy8gZW5kIG9mIG1ldGhvZHMKCiAgZGF0YSAoKSB7CiAgICByZXR1cm57CiAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgIGRpYWxvZ0RlbGV0ZTogZmFsc2UsCiAgICAgIGRpYWxvZ0NyZWF0ZTogZmFsc2UsCiAgICAgIHNob3dUb2tlbkNvbW1hbmQ6IGZhbHNlLAogICAgICBjcmVhdGVCdG5TaG93OiB0cnVlLAogICAgICByZXNEYXRhOiAnJywKICAgICAgaXRlbV9pZDogJycsCiAgICAgIGV0Y2Q6IGZhbHNlLAogICAgICBjb250cm9sUGxhbmU6IGZhbHNlLAogICAgICB3b3JrZXI6IGZhbHNlLAogICAgICBoZWFkZXJzOiBbCiAgICAgICAgeyB0ZXh0OiAn7IOB7YOcJywgdmFsdWU6ICdzdGF0ZSd9LAogICAgICAgIHsgdGV4dDogJ+2BtOufrOyKpO2EsCDsnbTrpoQnLCB2YWx1ZTogJ25hbWUnIH0sCiAgICAgICAgeyB0ZXh0OiAn7KCc6rO17J6QJywgdmFsdWU6ICdwcm92aWRlcicgfSwKICAgICAgICB7IHRleHQ6ICfrhbjrk5wnLCB2YWx1ZTogJ25vZGVDb3VudCcgfSwKICAgICAgICB7IHRleHQ6ICdDUFUnLCB2YWx1ZTogJ2NwdUxpc3QnfSwKICAgICAgICB7IHRleHQ6ICfrqZTrqqjrpqwnLCB2YWx1ZTogJ21lbW9yeUxpc3QnfSwKICAgICAgICB7IHRleHQ6ICfsiJjsoJUv7IKt7KCcJywgdmFsdWU6ICdhY3Rpb25zJywgc29ydGFibGU6IGZhbHNlIH0sCiAgICAgIF0sCiAgICAgIGluZm9ybWF0aW9uOiBbCiAgICAgIF0sCiAgICAgIGVkaXRlZEluZGV4OiAtMSwKICAgICAgbmV3Q2x1c3RlcjogLTEsCiAgICAgIGNvbW1hbmQ6ICcnLAogICAgICBpbnNlY3VyZUNvbW1hbmQ6ICcnLAogICAgICBub2RlQ29tbWFuZDogJycsCiAgICAgIG5vZGVDb21tYW5kUm9sZTogJycsCiAgICAgIGVkaXRlZEl0ZW06IHsKICAgICAgICBzdGF0ZTogJycsCiAgICAgICAgbmFtZTogJ0NsdXN0ZXIgTmFtZScsCiAgICAgICAgcHJvdmlkZXI6ICcnLAogICAgICAgIG5vZGVDb3VudDogJycsCiAgICAgICAgcmVxdWVzdGVkOnsKICAgICAgICAgIGNwdTogJycsCiAgICAgICAgICBtZW1vcnk6ICcnLAogICAgICAgICAgcG9kczogJycsCiAgICAgICAgfSwKICAgICAgICBjYXBhY2l0eTp7CiAgICAgICAgICBjcHU6ICcnLAogICAgICAgICAgbWVtb3J5OiAnJywKICAgICAgICAgIHBvZHM6ICcnLAogICAgICAgIH0sCiAgICAgICAgaWQ6ICcnLAogICAgICB9LAogICAgICBkZWZhdWx0SXRlbTogewogICAgICAgIHN0YXRlOiAnJywKICAgICAgICBuYW1lOiAnQ2x1c3RlciBOYW1lJywKICAgICAgICBwcm92aWRlcjogJycsCiAgICAgICAgbm9kZUNvdW50OiAnJywKICAgICAgICByZXF1ZXN0ZWQ6ewogICAgICAgICAgY3B1OiAnJywKICAgICAgICAgIG1lbW9yeTogJycsCiAgICAgICAgICBwb2RzOiAnJywKICAgICAgICB9LAogICAgICAgIGNhcGFjaXR5OnsKICAgICAgICAgIGNwdTogJycsCiAgICAgICAgICBtZW1vcnk6ICcnLAogICAgICAgICAgcG9kczogJycsCiAgICAgICAgfSwKICAgICAgICB2ZXJzaW9uOnsKICAgICAgICAgIGdpdFZlcnNpb246ICcnLAogICAgICAgIH0sCiAgICAgICAgaWQ6ICcnLAogICAgICB9LAogICAgfQogIH0sIC8vIGVuZCBvZiBkYXRhCiAgY29tcHV0ZWQ6IHsKICAgIGZvcm1UaXRsZSAoKSB7CiAgICAgIHJldHVybiB0aGlzLmVkaXRlZEluZGV4ID09PSAtMSA/ICftgbTrn6zsiqTthLAg7IOd7ISxJyA6ICftgbTrn6zsiqTthLAg7IiY7KCVJwogICAgfSwKCiAgICBjbHVzdGVyRm9ybVRpdGxlICgpIHsKICAgICAgcmV0dXJuIHRoaXMubmV3Q2x1c3RlciA9PT0gLTEgPyAn7YG065+s7Iqk7YSwIOyDneyEsScgOiAn6riw7KG0IO2BtOufrOyKpO2EsCDstpTqsIAnCiAgICB9LAoKICAgIGVkaXRTcGFjZUNsdXN0ZXJOYW1lKCl7CiAgICAgIHJldHVybiB0aGlzLmVkaXRlZEl0ZW0ubmFtZSA9PSAnJyB8fCB0aGlzLmVkaXRlZEl0ZW0ubmFtZSA9PSB1bmRlZmluZWQgPyAn67mIIOy5uOydhCDsnoXroKXtlbQg7KO87IS47JqUJyA6ICcnCiAgICB9LAogIH0sCiAgY3JlYXRlZCgpewogICAgbGV0IF9zZWxmID0gdGhpczsKCiAgICBpZihfc2VsZi4kc3RvcmUuc3RhdGUuY2x1c3RlclRpbWVyID09ICcnKSB7CiAgICAgIF9zZWxmLiRzdG9yZS5jb21taXQoJ1NFVF9DTFVTVEVSX1RJTUVSJywgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIF9zZWxmLmNsdXN0ZXJfR2V0KCkKICAgICAgfSwgNTAwMCkpCiAgICB9CgogICAgX3NlbGYuJHN0b3JlLmNvbW1pdCgnU0VUX0xPQURJTkcnLCB0cnVlKQoKICAgIGNvbnNvbGUubG9nKHRoaXMuJHN0b3JlLnN0YXRlLmJlYXJlclRva2VuKQogICAgY29uc29sZS5sb2codGhpcy4kc3RvcmUuc3RhdGUudXNlcklkKQoKICAgIC8vIGlmKCcnID09IHRoaXMuJHN0b3JlLnN0YXRlLmJlYXJlclRva2VuIHx8ICcnID09IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJJZCl7CiAgICAvLyAgIHRoaXMuJHJvdXRlci5wdXNoKCcvbG9naW4nKQogICAgLy8gICByZXR1cm47CiAgICAvLyB9CgoKICAgIGF4aW9zLmdldCgnL2FwaS9jbHVzdGVycycsewogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpewoKICAgICAgbGV0IGpzb25TdHIgPSBKU09OLnN0cmluZ2lmeShyZXNwb25zZS5kYXRhKTsKICAgICAgbGV0IGpzb24gPSBKU09OLnBhcnNlKGpzb25TdHIpOwoKICAgICAgbGV0IGNwdUxpc3QgPSBbXTsKICAgICAgbGV0IG1lbW9yeUxpc3QgPSBbXTsKICAgICAgbGV0IHBvZHNMaXN0ID0gW107CgogICAgICBfc2VsZi5pbmZvcm1hdGlvbiA9IGpzb247CgogICAgICBmb3IobGV0IGk9MDtpPGpzb24ubGVuZ3RoO2krKyl7CiAgICAgICAgY3B1TGlzdFtpXSA9IGpzb25baV0ucmVxdWVzdGVkLmNwdSArICcvJyArIGpzb25baV0uY2FwYWNpdHkuY3B1ICsgJyBjb3Jlcyc7CiAgICAgICAgbWVtb3J5TGlzdFtpXSA9IGpzb25baV0ucmVxdWVzdGVkLm1lbW9yeSArICcvJyArIGpzb25baV0uY2FwYWNpdHkubWVtb3J5OwogICAgICAgIHBvZHNMaXN0W2ldID0ganNvbltpXS5yZXF1ZXN0ZWQucG9kcyArICcvJyArIGpzb25baV0uY2FwYWNpdHkucG9kczsKICAgICAgICBfc2VsZi5pbmZvcm1hdGlvbltpXS5jcHVMaXN0ID0gY3B1TGlzdFtpXTsKICAgICAgICBfc2VsZi5pbmZvcm1hdGlvbltpXS5tZW1vcnlMaXN0ID0gbWVtb3J5TGlzdFtpXTsKICAgICAgICBfc2VsZi5pbmZvcm1hdGlvbltpXS5wb2RzTGlzdCA9IHBvZHNMaXN0W2ldOwogICAgICB9CiAgICAgIF9zZWxmLiRzdG9yZS5jb21taXQoJ1NFVF9MT0FESU5HJywgZmFsc2UpCgogICAgICAvLyBjb25zb2xlLmxvZygnY2x1c2V0ZXIgOiAnICsgX3NlbGYuJHN0b3JlLnN0YXRlLmJlYXJlclRva2VuKQogICAgICAvLyBjb25zb2xlLmxvZyhfc2VsZi5pbmZvcm1hdGlvbik7CiAgICAgIC8vIGZvciAodmFyIG9iaiBvZiBfc2VsZi5pbmZvcm1hdGlvbikgewogICAgICAvLyAgIGNvbnNvbGUubG9nKG9iaik7CiAgICAgIC8vIH0KICAgICAgLy8ganNvbl9saXN0ID0ganNvbjsKICAgICAgLy8gZm9yKHZhciBpPTA7aTxqc29uLmxlbmd0aDtpKyspewogICAgICAvLyAgIGNvbnNvbGUubG9nKGpzb25baV0ubWVtb3J5KTsKICAgICAgLy8gfTsKCgogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKXsKICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgfSkuZmluYWxseShmdW5jdGlvbiAoKXsKCiAgICB9KTsKICB9LCAvLyBlbmQgb2YgY3JlYXRlZAp9Cg=="},{"version":3,"sources":["Cluster.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoNA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA","file":"Cluster.vue","sourceRoot":"src/views/dashboard/pages","sourcesContent":["<template>\n  <v-container\n    id=\"user-profile\"\n    fluid\n    tag=\"section\"\n  >\n    <v-row justify=\"center\">\n      <v-col\n        cols=\"12\"\n        md=\"10\"\n      >\n<!--          <v-data-table-->\n<!--              :headers=\"headers\"-->\n<!--              :items=\"information\"-->\n<!--              :items-per-page=\"10\"-->\n<!--              class=\"elevation-1\"-->\n<!--              @click:row=\"dataClick\"-->\n<!--          >-->\n          <v-data-table\n              :headers=\"headers\"\n              :items=\"information\"\n              :items-per-page=\"10\"\n              class=\"elevation-1\"\n          >\n            <template v-slot:top>\n                <v-divider\n                    class=\"mx-4\"\n                    inset\n                    vertical\n                ></v-divider>\n                <v-spacer></v-spacer>\n              <div style=\"position: relative; width: 100%; height: 50px;\">\n                <div style=\"position: absolute; right: 7%; white-space: nowrap;\">\n                  <v-btn\n                      color=\"primary\"\n                      dark\n                      class=\"mb-2\"\n                      @click=\"createCluster\"\n                      style=\"display: inline-block;\"\n                  >\n                    새 클러스터 생성\n                  </v-btn>\n                  <v-btn\n                      color=\"primary\"\n                      dark\n                      class=\"mb-2\"\n                      @click=\"importCluster\"\n                      style=\"margin-left: 10%; display: inline-block;\"\n                  >\n                    기존 클러스터 추가\n                  </v-btn>\n                </div>\n              </div>\n\n                <v-dialog v-model=\"dialogCreate\" @close=\"cluster_Get\" max-width=\"700px\">\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ clusterFormTitle }}</span>\n                    </v-card-title>\n\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col\n                              cols=\"12\"\n                              sm=\"6\"\n                              md=\"4\"\n                          >\n                            <div style=\"height: 90px;\">\n                              <v-text-field\n                                  v-model=\"editedItem.name\"\n                                  label=\"클러스터 이름\"\n                              ></v-text-field>\n                              <div>{{editSpaceClusterName}}</div>\n                            </div>\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n\n                    <div v-show=\"showTokenCommand\" style=\"margin-left:5%; margin-right:5%; \">\n                      <div v-if=\"newCluster == -1\" style=\"text-align: center;\">\n                        <v-checkbox v-model=\"etcd\" @change=\"checkRole\" label=\"etcd\" style=\"display: inline-block;\"></v-checkbox>\n                        <v-checkbox v-model=\"controlPlane\" @change=\"checkRole\" label=\"controlPlane\" style=\"display: inline-block; margin-left: 10%;\"></v-checkbox>\n                        <v-checkbox v-model=\"worker\" @change=\"checkRole\" label=\"worker\" style=\"display: inline-block; margin-left: 10%;\"></v-checkbox>\n                      </div>\n                      <span>{{newCluster == -1 ? '이미 실행중인 하나 이상의 기존 머신에서 이 Docker 명령을 실행하세요.' : '지원되는 Kubernetes 버전을 실행하는 기존 Kubernetes 클러스터에서 아래 kubectl 명령을 실행하여 Rancher로 가져옵니다.'}}<br><br></span>\n                      <span>{{newCluster == -1 ? nodeCommand+nodeCommandRole : command }}</span>\n                      <span><br><br>{{newCluster == -1 ? '' : '\\'알 수없는 기관에서 서명 한 인증서\\'에 대한 오류가 발생하는 경우 대신 아래 명령을 실행하여 인증서 검사를 우회하세요.'}}<br></span>\n                      <span>{{newCluster == -1 ? '' : insecureCommand}}</span>\n                    </div>\n\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                          v-show=\"createBtnShow\"\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"clusterCreateImport\"\n                      >\n                        생성\n                      </v-btn>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"dialogCreateClose\"\n                      >\n                        취소\n                      </v-btn>\n                    </v-card-actions>\n                  </v-card>\n\n                </v-dialog>\n\n                <v-dialog\n                    v-model=\"dialog\"\n                    max-width=\"600px\"\n                >\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">{{ formTitle }}</span>\n                    </v-card-title>\n\n                    <v-card-text>\n                      <v-container>\n                        <v-row>\n                          <v-col\n                              cols=\"12\"\n                              sm=\"6\"\n                              md=\"4\"\n                          >\n                            <div style=\"height: 90px;\">\n                              <v-text-field\n                                  v-model=\"editedItem.name\"\n                                  label=\"클러스터 이름\"\n                              ></v-text-field>\n                              <div>{{editSpaceClusterName}}</div>\n                            </div>\n                          </v-col>\n                        </v-row>\n                      </v-container>\n                    </v-card-text>\n\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"modifyClusterName\"\n                      >\n                        저장\n                      </v-btn>\n                      <v-btn\n                          color=\"blue darken-1\"\n                          text\n                          @click=\"close\"\n                      >\n                        취소\n                      </v-btn>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n                <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n                  <v-card>\n                    <v-card-title class=\"headline\">클러스터를 삭제하시겠습니까?</v-card-title>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\">삭제</v-btn>\n                      <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">취소</v-btn>\n                      <v-spacer></v-spacer>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n            </template>\n\n            <template v-slot:item.name=\"{ item }\">\n              <a @click=\"dataClick(item)\">{{ item.name }}</a>\n            </template>\n\n            <template v-slot:item.actions=\"{ item }\">\n              <v-icon\n                  small\n                  class=\"mr-2\"\n                  @click=\"editItem(item)\"\n              >\n                mdi-pencil\n              </v-icon>\n              <v-icon\n                  small\n                  @click=\"deleteItem(item)\"\n              >\n                mdi-delete\n              </v-icon>\n            </template>\n<!--            <template v-slot:no-data>-->\n<!--              <v-btn-->\n<!--                  color=\"primary\"-->\n<!--                  @click=\"initialize\"-->\n<!--              >-->\n<!--                Reset-->\n<!--              </v-btn>-->\n<!--            </template>-->\n          </v-data-table>\n<!--          <v-btn color=\"primary\" @click=\"cluster_Delete()\">Delete</v-btn>-->\n\n\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\nconst Vue = require('vue');\nimport drawer from \"../components/core/Drawer\";\n\n\n\n\nexport default {\n  name: \"Clusters\",\n  // data: function (){\n  //   return{\n  //     list:['a','b'],\n  //   };\n  // }\n  methods:{\n    modifyClusterName(){\n      let _self = this;\n\n      if(this.editedItem.name == '' || this.editedItem.name == undefined){\n        return\n      }\n      _self.dialog = false\n      _self.$store.commit('SET_LOADING', true)\n      console.log('modify');\n      let clusterData = {\n        name: _self.editedItem.name,\n        id: _self.editedItem.id\n      }\n      axios.post('/api/clusters/modifyClusterName',clusterData\n      ).then(function (response){\n        // console.log(response.data)\n\n        _self.cluster_Get()\n        _self.$store.commit('SET_LOADING', false)\n        _self.$store.commit('SET_ALERT_TYPE', 'success')\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '클러스터 이름 수정 완료')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    checkRole(){\n      this.nodeCommandRole = ''\n\n      if(this.etcd){\n        this.nodeCommandRole += ' --etcd'\n      }\n      if(this.controlPlane){\n        this.nodeCommandRole += ' --controlplane'\n      }\n      if(this.worker){\n        this.nodeCommandRole += ' --worker'\n      }\n\n    },\n    editItem (item) {\n      this.editedIndex = this.information.indexOf(item)\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n\n    createCluster (item) {\n      this.newCluster = -1\n      this.showTokenCommand = false\n      this.editedItem = Object.assign({}, item)\n      this.dialogCreate = true\n      this.createBtnShow = true\n    },\n\n    importCluster (item) {\n      this.newCluster = 1\n      this.showTokenCommand = false\n      this.editedItem = Object.assign({}, item)\n      this.dialogCreate = true\n      this.createBtnShow = true\n    },\n\n    clusterCreateImport (item) {\n      Object.assign({}, item)\n      console.log(this.editedItem.name)\n      // let showTokenCommand = document.getElementById('showTokenCommand')\n      // showTokenCommand.style.visibility = 'visible'\n\n      if(this.editedItem.name == '' || this.editedItem.name == undefined ){\n        return\n      }\n\n      this.cluster_Create(this.editedItem.name)\n\n\n      // await _sleep(1000);\n      // console.log('Second');\n\n      // this.close()\n    },\n\n    deleteItem (item) {\n      if(item.name != 'local') {\n        console.log(item.id)\n        this.item_id = item.id\n        this.editedIndex = this.information.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialogDelete = true\n      }\n    },\n\n    deleteItemConfirm () {\n      this.information.splice(this.editedIndex, 1)\n      this.closeDelete()\n      this.cluster_Delete(this.item_id);\n    },\n\n    dialogCreateClose(){\n      this.dialogCreate = false\n      this.cluster_Get()\n    },\n\n    close () {\n      this.dialog = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    closeDelete () {\n      this.dialogDelete = false\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      })\n    },\n\n    save () {\n      if(this.editedItem.name == ''){\n        return\n      }\n\n      if (this.editedIndex > -1) {\n        Object.assign(this.information[this.editedIndex], this.editedItem)\n      } else {\n        // this.information.push(this.editedItem)\n        this.cluster_Create(this.editedItem.name)\n      }\n      this.close()\n    },\n\n    cluster_Delete(id){\n      let _self = this;\n      console.log('delete');\n      axios.get('/api/clusters/delete/'+id,{\n      }).then(function (response){\n\n        _self.cluster_Get()\n        // await _sleep(1000);\n        // console.log('Second');\n        _self.$store.commit('SET_ALERT_TYPE', 'success')\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '클러스터 삭제 완료')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    cluster_Create(name){\n      let _self = this;\n      _self.$store.commit('SET_LOADING', true)\n      console.log('Create');\n      axios.get('/api/clusters/create/'+name,{\n      }).then(function (response){\n        // console.log(response.data)\n          _self.resData = response.data\n\n          console.log('tokenData >>>> ')\n          console.log(_self.resData)\n          if (_self.newCluster == -1) {\n            _self.nodeCommand = _self.resData.nodeCommand\n          } else {\n            _self.command = _self.resData.command\n            _self.insecureCommand = _self.resData.insecureCommand\n          }\n          _self.showTokenCommand = true\n          _self.createBtnShow = false\n          _self.$store.commit('SET_LOADING', false)\n        _self.$store.commit('SET_ALERT_TYPE', 'success')\n        _self.$store.commit('SET_ERROR_CHECK', true)\n        _self.$store.commit('SET_ALERT_TEXT', '클러스터 등록 완료')\n\n        setTimeout(function (){\n          _self.$store.commit('SET_ERROR_CHECK', false)\n        },3000)\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n\n    // cluster_Create(name){\n    //   let _self = this;\n    //   let returnToken\n    //   console.log('Create');\n    //   axios.get('/api/clusters/create/'+name,{\n    //   }).then(function (response){\n    //     // console.log(response.data)\n    //\n    //     const _sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\n    //\n    //     const timer = async () => {\n    //\n    //       _self.cluster_generateToken(response.data.id)\n    //\n    //       await _sleep(1500);\n    //       console.log('First');\n    //       _self.cluster_Get()\n    //\n    //       // await _sleep(1000);\n    //       // console.log('Second');\n    //     };\n    //     timer();\n    //   }).catch(function (error){\n    //     console.log(error);\n    //   }).finally(function (){\n    //\n    //   });\n    // },\n    //\n    // cluster_generateToken(name){\n    //   let _self = this;\n    //   console.log('generateToken');\n    //   axios.get('/api/clusters/generateToken/'+name,{\n    //   }).then(function (response){\n    //     console.log(response.data)\n    //     console.log(response.data.nodeCommand)\n    //\n    //     _self.resData = response.data\n    //       // await _sleep(1000);\n    //       // console.log('Second');\n    //\n    //   }).catch(function (error){\n    //     console.log(error);\n    //   }).finally(function (){\n    //\n    //   });\n    // },\n\n    cluster_Get(){\n      let _self = this;\n\n      console.log('cluster_Get')\n\n      axios.get('/api/clusters',{\n      }).then(function (response){\n\n        if(response.data =='' || response.data == null){\n          _self.$store.commit('SET_TOKEN', response.data.token)\n          _self.$store.commit('SET_USERID', response.data.userId)\n          _self.$store.commit('SET_NAME', response.data.name)\n          return\n        }\n\n        let jsonStr = JSON.stringify(response.data);\n        let json = JSON.parse(jsonStr);\n\n        let cpuList = [];\n        let memoryList = [];\n\n        _self.information = json;\n\n        for(let i=0;i<json.length;i++){\n          cpuList[i] = json[i].requested.cpu + '/' + json[i].capacity.cpu + ' cores';\n          memoryList[i] = json[i].requested.memory + '/' + json[i].capacity.memory;\n          _self.information[i].cpuList = cpuList[i];\n          _self.information[i].memoryList = memoryList[i];\n        }\n\n        //drawer.items.childItem = titleList\n\n        // json_list = json;\n        // for(var i=0;i<json.length;i++){\n        //   console.log(json[i].memory);\n        // };\n\n\n      }).catch(function (error){\n        console.log(error);\n      }).finally(function (){\n\n      });\n    },\n    dataClick(row){\n      let _self = this\n      this.information.map((item, index) =>{\n        console.log(row)\n        item.selected = item === row\n\n        this.$store.commit('SET_CLUSTER_DETAIL_INFO', row)\n        this.$store.commit('SET_CPU', row.cpuList)\n        this.$store.commit('SET_MEMORY', row.memoryList)\n        this.$store.commit('SET_PODS', row.podsList)\n\n        this.$store.commit('SET_LOADING', true)\n        this.$router.push('/c/'+row.id)\n      });\n    },\n    // dataClick(row){\n    //   this.information.map((item, index) =>{\n    //     item.selected = item === row\n    //\n    //     let clusterDetailInfo = {}\n    //     clusterDetailInfo = row\n    //\n    //     this.$store.commit('SET_CLUSTER_DETAIL_INFO', clusterDetailInfo)\n    //     this.$store.commit('SET_CPU', row.cpuList)\n    //     this.$store.commit('SET_MEMORY', row.memoryList)\n    //     this.$store.commit('SET_PODS', row.podsList)\n    //     console.log(row)\n    //     if(row.appliedSpec.rancherKubernetesEngineConfig != null) {\n    //       this.$store.commit('SET_NODES', row.appliedSpec.rancherKubernetesEngineConfig.nodes)\n    //       this.$store.commit('SET_HOSTNAME_OVERRIDE', row.appliedSpec.rancherKubernetesEngineConfig.nodes[0].hostnameOverride)\n    //       this.$store.commit('SET_ROLE', row.appliedSpec.rancherKubernetesEngineConfig.nodes[0].role)\n    //     }else{\n    //       this.$store.commit('SET_HOSTNAME_OVERRIDE', row.id)\n    //     }\n    //     this.$store.commit('SET_GIT_VERSION', row.version.gitVersion)\n    //\n    //     this.$router.push('/c/'+row.id)\n    //   });\n    // },\n  }, // end of methods\n\n  data () {\n    return{\n      dialog: false,\n      dialogDelete: false,\n      dialogCreate: false,\n      showTokenCommand: false,\n      createBtnShow: true,\n      resData: '',\n      item_id: '',\n      etcd: false,\n      controlPlane: false,\n      worker: false,\n      headers: [\n        { text: '상태', value: 'state'},\n        { text: '클러스터 이름', value: 'name' },\n        { text: '제공자', value: 'provider' },\n        { text: '노드', value: 'nodeCount' },\n        { text: 'CPU', value: 'cpuList'},\n        { text: '메모리', value: 'memoryList'},\n        { text: '수정/삭제', value: 'actions', sortable: false },\n      ],\n      information: [\n      ],\n      editedIndex: -1,\n      newCluster: -1,\n      command: '',\n      insecureCommand: '',\n      nodeCommand: '',\n      nodeCommandRole: '',\n      editedItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        id: '',\n      },\n      defaultItem: {\n        state: '',\n        name: 'Cluster Name',\n        provider: '',\n        nodeCount: '',\n        requested:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        capacity:{\n          cpu: '',\n          memory: '',\n          pods: '',\n        },\n        version:{\n          gitVersion: '',\n        },\n        id: '',\n      },\n    }\n  }, // end of data\n  computed: {\n    formTitle () {\n      return this.editedIndex === -1 ? '클러스터 생성' : '클러스터 수정'\n    },\n\n    clusterFormTitle () {\n      return this.newCluster === -1 ? '클러스터 생성' : '기존 클러스터 추가'\n    },\n\n    editSpaceClusterName(){\n      return this.editedItem.name == '' || this.editedItem.name == undefined ? '빈 칸을 입력해 주세요' : ''\n    },\n  },\n  created(){\n    let _self = this;\n\n    if(_self.$store.state.clusterTimer == '') {\n      _self.$store.commit('SET_CLUSTER_TIMER', setInterval(function () {\n        _self.cluster_Get()\n      }, 5000))\n    }\n\n    _self.$store.commit('SET_LOADING', true)\n\n    console.log(this.$store.state.bearerToken)\n    console.log(this.$store.state.userId)\n\n    // if('' == this.$store.state.bearerToken || '' == this.$store.state.userId){\n    //   this.$router.push('/login')\n    //   return;\n    // }\n\n\n    axios.get('/api/clusters',{\n    }).then(function (response){\n\n      let jsonStr = JSON.stringify(response.data);\n      let json = JSON.parse(jsonStr);\n\n      let cpuList = [];\n      let memoryList = [];\n      let podsList = [];\n\n      _self.information = json;\n\n      for(let i=0;i<json.length;i++){\n        cpuList[i] = json[i].requested.cpu + '/' + json[i].capacity.cpu + ' cores';\n        memoryList[i] = json[i].requested.memory + '/' + json[i].capacity.memory;\n        podsList[i] = json[i].requested.pods + '/' + json[i].capacity.pods;\n        _self.information[i].cpuList = cpuList[i];\n        _self.information[i].memoryList = memoryList[i];\n        _self.information[i].podsList = podsList[i];\n      }\n      _self.$store.commit('SET_LOADING', false)\n\n      // console.log('cluseter : ' + _self.$store.state.bearerToken)\n      // console.log(_self.information);\n      // for (var obj of _self.information) {\n      //   console.log(obj);\n      // }\n      // json_list = json;\n      // for(var i=0;i<json.length;i++){\n      //   console.log(json[i].memory);\n      // };\n\n\n    }).catch(function (error){\n      console.log(error);\n    }).finally(function (){\n\n    });\n  }, // end of created\n}\n</script>\n\n// const getProject = async () => {\n//   try {\n//     console.log('gg');\n//     return await axios.get('/api/cluster');\n//   }catch(error){\n//     console.error(error);\n//     console.log('error');\n//   }\n// };\n//\n// const projectList = async () => {\n//   const project = await getProject();\n//   console.log(project);\n//   if(project.data.message){\n//     console.log('');\n//   }\n//   return project;\n// };\n//\n//   export default {\n//     name: \"Cluster\",\n//     created(){\n//       var json = projectList();\n//       console.log(json);\n//     }\n//   }"]}]}