{"remainingRequest":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/src/views/dashboard/pages/Detail.vue","mtime":1610352077436},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yschoi/Desktop/workspace/yschoi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTsKY29uc3QgVnVlID0gcmVxdWlyZSgndnVlJyk7CmltcG9ydCBkcmF3ZXIgZnJvbSAiLi4vY29tcG9uZW50cy9jb3JlL0RyYXdlciI7CmltcG9ydCBwcm9qZWN0cyBmcm9tICIuL1Byb2plY3QiOwppbXBvcnQgbm9kZSBmcm9tICIuL05vZGUiOwovLyBpbXBvcnQgZG9udXQgZnJvbSAndnVlLWRvdWdobnV0LWNoYXJ0JwovLyBpbXBvcnQgZG9udXQgZnJvbSAnLi4vY29tcG9uZW50L0RvbnV0Q2hhcnQnCmltcG9ydCBkb251dCBmcm9tICcuLi9jb21wb25lbnQvRG91Z2hudXRDaGFydCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGV0YWlsIiwKICBjb21wb25lbnRzOnsKICAgIHByb2plY3RzLAogICAgbm9kZSwKICAgIGRvbnV0LAogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIGhlYWRlcnM6IFsKICAgICAgeyB0ZXh0OiAn7IOB7YOcJywgdmFsdWU6ICdzdGF0ZSd9LAogICAgICB7IHRleHQ6ICfrhbjrk5wg7J2066aEJywgdmFsdWU6ICdhcHBsaWVkU3BlYy5yYW5jaGVyS3ViZXJuZXRlc0VuZ2luZUNvbmZpZy5ub2Rlc1swXS5ob3N0bmFtZU92ZXJyaWRlJyB9LAogICAgICB7IHRleHQ6ICfsl63tlaAnLCB2YWx1ZTogJ2FwcGxpZWRTcGVjLnJhbmNoZXJLdWJlcm5ldGVzRW5naW5lQ29uZmlnLm5vZGVzWzBdLnJvbGUnIH0sCiAgICAgIHsgdGV4dDogJ+uyhOyghCcsIHZhbHVlOiAndmVyc2lvbi5naXRWZXJzaW9uJyB9LAogICAgICB7IHRleHQ6ICdDUFUnLCB2YWx1ZTogJ2NwdSd9LAogICAgICB7IHRleHQ6ICfrqZTrqqjrpqwnLCB2YWx1ZTogJ21lbW9yeSd9LAogICAgICB7IHRleHQ6ICftjIzrk5wnLCB2YWx1ZTogJ3BvZHMnIH0sCiAgICAgIHsgdGV4dDogJ+yImOyglS/sgq3soJwnLCB2YWx1ZTogJ2FjdGlvbnMnLCBzb3J0YWJsZTogZmFsc2V9CiAgICBdLAogICAgdGFza3NEb25lOiAxMjUsCiAgICBjdXJyZW50SXRlbTogJ3RhYi1XZWInLAogICAgaXRlbXM6IFsKICAgICAgJ+uMgOyLnOuztOuTnCcsICfrhbjrk5wnLCAn7ZSE66Gc7KCd7Yq4L+uEpOyehOyKpO2OmOydtOyKpCcsCiAgICBdLAogICAgdGV4dDogJ1Rlc3QgVGV4dCcsCiAgICBpbmZvcm1hdGlvbjogWwogICAgXSwKICAgIHByb3ZpZGVyOiAnJywKICAgIEt1YmVWZXJzaW9uOiAnJywKICAgIENyZWF0ZWQ6ICcnLAogICAgcmVxdWVzdGVkOnsKICAgICAgY3B1OiAnJywKICAgICAgbWVtb3J5OiAnJywKICAgICAgcG9kczogJycsCiAgICB9LAogICAgY2FwYWNpdHk6ewogICAgICBjcHU6ICcnLAogICAgICBtZW1vcnk6ICcnLAogICAgICBwb2RzOiAnJywKICAgIH0sCiAgICBpZDogJycsCiAgICBjbHVzdGVyRGV0YWlsSW5mbzogewogICAgICBwcm92aWRlcjonJywKICAgICAgY3JlYXRlZDonJywKICAgICAgdmVyc2lvbjp7CiAgICAgICAgZ2l0VmVyc2lvbjogJycsCiAgICAgIH0sCiAgICAgIG5hbWU6ICdDbHVzdGVyIE5hbWUnLAogICAgICBub2RlQ291bnQ6ICcnLAogICAgICByZXF1ZXN0ZWQ6ewogICAgICAgIGNwdTogJycsCiAgICAgICAgbWVtb3J5OiAnJywKICAgICAgICBwb2RzOiAnJywKICAgICAgfSwKICAgICAgY2FwYWNpdHk6ewogICAgICAgIGNwdTogJycsCiAgICAgICAgbWVtb3J5OiAnJywKICAgICAgICBwb2RzOiAnJywKICAgICAgfSwKICAgICAgaWQ6ICcnLAogICAgICBjcHU6ICcnLAogICAgICBtZW1vcnk6ICcnLAogICAgICBwb2RzOiAnJywKICAgICAgYXBwbGllZFNwZWM6IHsKICAgICAgICByYW5jaGVyS3ViZXJuZXRlc0VuZ2luZUNvbmZpZzp7CiAgICAgICAgICBub2Rlczoge30sCiAgICAgICAgfSwKICAgICAgfSwKICAgICAgY3B1UGVyY2VudDogJycsCiAgICAgIG1lbVBlcmNlbnQ6ICcnLAogICAgICBwb2RzUGVyY2VudDogJycsCiAgICB9LAogICAgbm9kZXM6IFsKICAgIF0sCiAgfSksCgogIGNyZWF0ZWQoKXsKICAgIGxldCBfc2VsZiA9IHRoaXMKCiAgICB0aGlzLmNsdXN0ZXJEZXRhaWxJbmZvID0gdGhpcy4kc3RvcmUuc3RhdGUuY2x1c3RlckRldGFpbEluZm8KICAgIHRoaXMuaW5mb3JtYXRpb24ucHVzaCh0aGlzLmNsdXN0ZXJEZXRhaWxJbmZvKQogICAgY29uc29sZS5sb2codGhpcy5pbmZvcm1hdGlvbikKICAgIGNvbnNvbGUubG9nKHRoaXMuY2x1c3RlckRldGFpbEluZm8pCgoKICAgIC8vLy8vLy8vLy8vLy8vLy8vIGNwdQogICAgbGV0IHJlcUNQVSA9IHRoaXMuY2x1c3RlckRldGFpbEluZm8ucmVxdWVzdGVkLmNwdQogICAgbGV0IGNhcENQVSA9IHRoaXMuY2x1c3RlckRldGFpbEluZm8uY2FwYWNpdHkuY3B1CgogICAgaWYocmVxQ1BVID09IHVuZGVmaW5lZCB8fCByZXFDUFUgPT0gJycgfHwgcmVxQ1BVID09ICcwJyl7CiAgICAgIHJldHVybgogICAgfQoKICAgIGlmKHJlcUNQVS5pbmRleE9mKCdtJykgIT0gLTEpewogICAgICByZXFDUFUgPSByZXFDUFUuc3Vic3RyaW5nKDAscmVxQ1BVLmluZGV4T2YoJ20nKSkKICAgICAgLy8gY29uc29sZS5sb2cocmVxQ1BVKQogICAgfWVsc2V7CiAgICAgIHJlcUNQVSA9IHJlcUNQVSoxMDAwCiAgICAgIC8vIGNvbnNvbGUubG9nKHJlcUNQVSkKICAgIH0KCiAgICBpZihjYXBDUFUuaW5kZXhPZignbScpICE9IC0xKXsKICAgICAgY2FwQ1BVID0gY2FwQ1BVLnN1YnN0cmluZygwLGNhcENQVS5pbmRleE9mKCdtJykpCiAgICAgIC8vIGNvbnNvbGUubG9nKGNhcENQVSkKICAgIH1lbHNlewogICAgICBjYXBDUFUgPSBjYXBDUFUqMTAwMAogICAgfQoKICAgIGxldCBjcHVQZXJjZW50ID0gcmVxQ1BVL2NhcENQVSoxMDAKICAgIGNwdVBlcmNlbnQgPSBjcHVQZXJjZW50LnRvRml4ZWQoMSkKICAgIGNvbnNvbGUubG9nKGNwdVBlcmNlbnQpCgogICAgLy8vLy8vLy8vLy8vLy8vLyBtZW1vcnkKICAgIGxldCByZXFNZW1vcnkgPSB0aGlzLmNsdXN0ZXJEZXRhaWxJbmZvLnJlcXVlc3RlZC5tZW1vcnkKICAgIGxldCBjYXBNZW1vcnkgPSB0aGlzLmNsdXN0ZXJEZXRhaWxJbmZvLmNhcGFjaXR5Lm1lbW9yeQoKICAgIGlmKHJlcU1lbW9yeS5pbmRleE9mKCdLaScpICE9IC0xKXsKICAgICAgcmVxTWVtb3J5ID0gcmVxTWVtb3J5LnN1YnN0cmluZygwLHJlcU1lbW9yeS5pbmRleE9mKCdLaScpKQogICAgICAvLyBjb25zb2xlLmxvZyhyZXFDUFUpCiAgICB9ZWxzZXsKICAgICAgcmVxTWVtb3J5ID0gcmVxTWVtb3J5LnN1YnN0cmluZygwLHJlcU1lbW9yeS5pbmRleE9mKCdNaScpKSoxMDI0CiAgICAgIC8vIGNvbnNvbGUubG9nKHJlcUNQVSkKICAgIH0KCiAgICBpZihjYXBNZW1vcnkuaW5kZXhPZignS2knKSAhPSAtMSl7CiAgICAgIGNhcE1lbW9yeSA9IGNhcE1lbW9yeS5zdWJzdHJpbmcoMCxjYXBNZW1vcnkuaW5kZXhPZignS2knKSkKICAgICAgLy8gY29uc29sZS5sb2coY2FwQ1BVKQogICAgfWVsc2V7CiAgICAgIGNhcE1lbW9yeSA9IHJlcU1lbW9yeS5zdWJzdHJpbmcoMCxjYXBNZW1vcnkuaW5kZXhPZignTWknKSkqMTAyNAogICAgfQoKICAgIGxldCBtZW1QZXJjZW50ID0gcmVxTWVtb3J5L2NhcE1lbW9yeSoxMDAKICAgIG1lbVBlcmNlbnQgPSBtZW1QZXJjZW50LnRvRml4ZWQoMSkKICAgIGNvbnNvbGUubG9nKG1lbVBlcmNlbnQpCgogICAgLy8vLy8vLy8vLy8vLy8vIHBvZHMKICAgIGxldCByZXFQb2RzID0gdGhpcy5jbHVzdGVyRGV0YWlsSW5mby5yZXF1ZXN0ZWQucG9kcwogICAgbGV0IGNhcFBvZHMgPSB0aGlzLmNsdXN0ZXJEZXRhaWxJbmZvLmNhcGFjaXR5LnBvZHMKCiAgICBsZXQgcG9kc1BlcmNlbnQgPSByZXFQb2RzL2NhcFBvZHMqMTAwCiAgICBwb2RzUGVyY2VudCA9IHBvZHNQZXJjZW50LnRvRml4ZWQoMSkKICAgIGNvbnNvbGUubG9nKHBvZHNQZXJjZW50KQoKICAgIHRoaXMuY2x1c3RlckRldGFpbEluZm8uY3B1UGVyY2VudCA9IGNwdVBlcmNlbnQKICAgIHRoaXMuY2x1c3RlckRldGFpbEluZm8ubWVtUGVyY2VudCA9IG1lbVBlcmNlbnQKICAgIHRoaXMuY2x1c3RlckRldGFpbEluZm8ucG9kc1BlcmNlbnQgPSBwb2RzUGVyY2VudAogICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTRVRfTE9BRElORycsIGZhbHNlKQoKICB9LAoKICBtZXRob2RzOiB7CgogIH0sCgp9Cg=="},{"version":3,"sources":["Detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA","file":"Detail.vue","sourceRoot":"src/views/dashboard/pages","sourcesContent":["<template>\n  <v-container>\n      <v-row justify=\"center\">\n      <v-col\n        cols=\"11\"\n      >\n        <v-card>\n          <v-toolbar flat>\n<!--            <template v-slot:extension>-->\n              <v-tabs\n                  v-model=\"currentItem\"\n                  fixed-tabs\n                  slider-color=\"black\"\n              >\n                <v-tab\n                    v-for=\"item in items\"\n                    :key=\"item\"\n                    :href=\"'#tab-' + item\"\n                >\n                  {{ item }}\n                </v-tab>\n\n              </v-tabs>\n<!--            </template>-->\n          </v-toolbar>\n\n          <v-tabs-items v-model=\"currentItem\">\n            <v-tab-item\n                v-for=\"item in items\"\n                :key=\"item\"\n                :value=\"'tab-' + item\"\n            >\n              <v-card flat v-if=\"item=='대시보드'\">\n                <v-card-text>\n                  <v-card\n                      class=\"mx-3\"\n                      outlined\n                  >\n                    <v-toolbar\n                    >\n                      <span class=\"subheading\" style=\"width: 30%; text-align: center;\">공급자:{{$store.state.clusterDetailInfo.provider}}</span>\n                      <v-divider\n                          class=\"mx-4\"\n                          vertical\n                      ></v-divider><span class=\"subheading\" style=\"width: 30%; text-align: center;\">쿠버네티스 버전:{{$store.state.clusterDetailInfo.version.gitVersion}}</span>\n                      <v-divider\n                          class=\"mx-4\"\n                          vertical\n                      ></v-divider><span class=\"subheading\" style=\"width: 30%; text-align: center;\">생성일:{{$store.state.clusterDetailInfo.created}}</span>\n                    </v-toolbar>\n\n                  </v-card>\n\n                  <v-card\n                      class=\"mx-3\"\n                      outlined\n                  >\n                    <div style=\"display: flex; width: 100%; height: 200px;\">\n                      <div style=\"width: 33.33%;\">\n                        <div class=\"column\">\n                          <donut :percent=\"clusterDetailInfo.cpuPercent\"\n                                 :visibleValue=\"true\"/>\n                        </div>\n                      </div>\n                      <div style=\"width: 33.33%;\">\n                        <div class=\"column\">\n                          <donut :percent=\"clusterDetailInfo.memPercent\"\n                                 :visibleValue=\"true\"/>\n                        </div>\n                      </div>\n                      <div style=\"width: 33.33%;\">\n                        <div class=\"column\">\n                          <donut :percent=\"clusterDetailInfo.podsPercent\"\n                                 :visibleValue=\"true\"/>\n                        </div>\n                      </div>\n                    </div>\n                    <v-toolbar\n                    >\n                      <span class=\"subheading\" style=\"width: 33.33%; text-align: center;\">cpu:{{$store.state.clusterDetailInfo.requested.cpu}}/{{$store.state.clusterDetailInfo.capacity.cpu}}</span>\n                      <v-divider\n                          class=\"mx-4\"\n                          vertical\n                      ></v-divider><span class=\"subheading\" style=\"width: 33.33%; text-align: center;\">memory:{{$store.state.clusterDetailInfo.requested.memory}}/{{$store.state.clusterDetailInfo.capacity.memory}}</span>\n                      <v-divider\n                          class=\"mx-4\"\n                          vertical\n                      ></v-divider><span class=\"subheading\" style=\"width: 33.33%; text-align: center;\">pods:{{$store.state.clusterDetailInfo.requested.pods}}/{{$store.state.clusterDetailInfo.capacity.pods}}</span>\n                    </v-toolbar>\n\n                  </v-card>\n                </v-card-text>\n              </v-card>\n\n              <v-card flat v-if=\"item=='노드'\">\n                <v-card-text>\n                  <node></node>\n<!--                  <v-data-table-->\n<!--                      :headers=\"headers\"-->\n<!--                      :items=\"information\"-->\n<!--                      :items-per-page=\"10\"-->\n<!--                      class=\"elevation-1\"-->\n<!--                  >-->\n\n<!--                  </v-data-table>-->\n                </v-card-text>\n              </v-card>\n\n              <v-card flat v-if=\"item=='프로젝트/네임스페이스'\">\n                <v-card-text>\n                  <projects></projects>\n                </v-card-text>\n              </v-card>\n\n\n            </v-tab-item>\n          </v-tabs-items>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios');\nconst Vue = require('vue');\nimport drawer from \"../components/core/Drawer\";\nimport projects from \"./Project\";\nimport node from \"./Node\";\n// import donut from 'vue-doughnut-chart'\n// import donut from '../component/DonutChart'\nimport donut from '../component/DoughnutChart'\n\nexport default {\n  name: \"Detail\",\n  components:{\n    projects,\n    node,\n    donut,\n  },\n  data: () => ({\n    headers: [\n      { text: '상태', value: 'state'},\n      { text: '노드 이름', value: 'appliedSpec.rancherKubernetesEngineConfig.nodes[0].hostnameOverride' },\n      { text: '역할', value: 'appliedSpec.rancherKubernetesEngineConfig.nodes[0].role' },\n      { text: '버전', value: 'version.gitVersion' },\n      { text: 'CPU', value: 'cpu'},\n      { text: '메모리', value: 'memory'},\n      { text: '파드', value: 'pods' },\n      { text: '수정/삭제', value: 'actions', sortable: false}\n    ],\n    tasksDone: 125,\n    currentItem: 'tab-Web',\n    items: [\n      '대시보드', '노드', '프로젝트/네임스페이스',\n    ],\n    text: 'Test Text',\n    information: [\n    ],\n    provider: '',\n    KubeVersion: '',\n    Created: '',\n    requested:{\n      cpu: '',\n      memory: '',\n      pods: '',\n    },\n    capacity:{\n      cpu: '',\n      memory: '',\n      pods: '',\n    },\n    id: '',\n    clusterDetailInfo: {\n      provider:'',\n      created:'',\n      version:{\n        gitVersion: '',\n      },\n      name: 'Cluster Name',\n      nodeCount: '',\n      requested:{\n        cpu: '',\n        memory: '',\n        pods: '',\n      },\n      capacity:{\n        cpu: '',\n        memory: '',\n        pods: '',\n      },\n      id: '',\n      cpu: '',\n      memory: '',\n      pods: '',\n      appliedSpec: {\n        rancherKubernetesEngineConfig:{\n          nodes: {},\n        },\n      },\n      cpuPercent: '',\n      memPercent: '',\n      podsPercent: '',\n    },\n    nodes: [\n    ],\n  }),\n\n  created(){\n    let _self = this\n\n    this.clusterDetailInfo = this.$store.state.clusterDetailInfo\n    this.information.push(this.clusterDetailInfo)\n    console.log(this.information)\n    console.log(this.clusterDetailInfo)\n\n\n    ///////////////// cpu\n    let reqCPU = this.clusterDetailInfo.requested.cpu\n    let capCPU = this.clusterDetailInfo.capacity.cpu\n\n    if(reqCPU == undefined || reqCPU == '' || reqCPU == '0'){\n      return\n    }\n\n    if(reqCPU.indexOf('m') != -1){\n      reqCPU = reqCPU.substring(0,reqCPU.indexOf('m'))\n      // console.log(reqCPU)\n    }else{\n      reqCPU = reqCPU*1000\n      // console.log(reqCPU)\n    }\n\n    if(capCPU.indexOf('m') != -1){\n      capCPU = capCPU.substring(0,capCPU.indexOf('m'))\n      // console.log(capCPU)\n    }else{\n      capCPU = capCPU*1000\n    }\n\n    let cpuPercent = reqCPU/capCPU*100\n    cpuPercent = cpuPercent.toFixed(1)\n    console.log(cpuPercent)\n\n    //////////////// memory\n    let reqMemory = this.clusterDetailInfo.requested.memory\n    let capMemory = this.clusterDetailInfo.capacity.memory\n\n    if(reqMemory.indexOf('Ki') != -1){\n      reqMemory = reqMemory.substring(0,reqMemory.indexOf('Ki'))\n      // console.log(reqCPU)\n    }else{\n      reqMemory = reqMemory.substring(0,reqMemory.indexOf('Mi'))*1024\n      // console.log(reqCPU)\n    }\n\n    if(capMemory.indexOf('Ki') != -1){\n      capMemory = capMemory.substring(0,capMemory.indexOf('Ki'))\n      // console.log(capCPU)\n    }else{\n      capMemory = reqMemory.substring(0,capMemory.indexOf('Mi'))*1024\n    }\n\n    let memPercent = reqMemory/capMemory*100\n    memPercent = memPercent.toFixed(1)\n    console.log(memPercent)\n\n    /////////////// pods\n    let reqPods = this.clusterDetailInfo.requested.pods\n    let capPods = this.clusterDetailInfo.capacity.pods\n\n    let podsPercent = reqPods/capPods*100\n    podsPercent = podsPercent.toFixed(1)\n    console.log(podsPercent)\n\n    this.clusterDetailInfo.cpuPercent = cpuPercent\n    this.clusterDetailInfo.memPercent = memPercent\n    this.clusterDetailInfo.podsPercent = podsPercent\n    this.$store.commit('SET_LOADING', false)\n\n  },\n\n  methods: {\n\n  },\n\n}\n</script>\n<style scoped>\n.column {\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n}\n</style>"]}]}